@tabformat = "#V;bold;glow_color:{0,0,0,1}"

@transparent_pixel = "gfx/interface/bookmarks/bm_1230_warofprinces_sub_ventrue_bookmark_warofprinces_mithras.dds"

@channel_has_color = "[Scope.Var(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_r')).IsSet]"


hbox = {
	name = "POD_event_window_widget_clothing_shaders"
	layoutpolicy_horizontal = expanding

	datacontext = "[EventWindowWidget.GetScope.sC('target')]"
	datacontext = "[EventWindowWidget.GetScope.sC('target').MakeScope.Var('color_root')]"

	state = {
		name = _show
		trigger_on_create = yes
		on_start = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '1' )]"
	}

	spacer = { size = { 16 0 } }

	vbox = {
		layoutpolicy_horizontal = expanding
		max_width = 470
		
		hbox = {
			layoutpolicy_horizontal = expanding
			margin = { 8 0 }
			
			button_tab = {
				size = { 0 38 }
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '1' )]"
				down = "[GetVariableSystem.HasValue( 'POD_clothing_color_tab', '1' )]"
	
				pod_color_icon_tab = {
					#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue('POD_color_channel_alpha_1'),'(CFixedPoint)1')]"
					visible = "[Scope.Var('POD_portrait_clothing_1_r').IsSet]"
					blockoverride "red"   { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_1_r').GetValue)]" }
					blockoverride "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_1_g').GetValue)]" }
					blockoverride "blue"  { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_1_b').GetValue)]" }
				}
	
				text_single = {
					raw_text = "1"
					parentanchor = center
					default_format = @tabformat
				}
			}
			
			button_tab = {
				size = { 0 38 }
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '2' )]"
				down = "[GetVariableSystem.HasValue( 'POD_clothing_color_tab', '2' )]"
	
				pod_color_icon_tab = {
					#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue('POD_color_channel_alpha_2'),'(CFixedPoint)1')]"
					visible = "[Scope.Var('POD_portrait_clothing_2_r').IsSet]"
					blockoverride "red"   { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_2_r').GetValue)]" }
					blockoverride "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_2_g').GetValue)]" }
					blockoverride "blue"  { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_2_b').GetValue)]" }
				}
	
				text_single = {
					raw_text = "2"
					parentanchor = center
					default_format = @tabformat
				}
			}
			
			button_tab = {
				size = { 0 38 }
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '3' )]"
				down = "[GetVariableSystem.HasValue( 'POD_clothing_color_tab', '3' )]"
	
				pod_color_icon_tab = {
					#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue('POD_color_channel_alpha_3'),'(CFixedPoint)1')]"
					visible = "[Scope.Var('POD_portrait_clothing_3_r').IsSet]"
					blockoverride "red"   { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_3_r').GetValue)]" }
					blockoverride "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_3_g').GetValue)]" }
					blockoverride "blue"  { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_3_b').GetValue)]" }
				}
	
				text_single = {
					raw_text = "3"
					parentanchor = center
					default_format = @tabformat
				}
			}
			
			button_tab = {
				size = { 0 38 }
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '4' )]"
				down = "[GetVariableSystem.HasValue( 'POD_clothing_color_tab', '4' )]"
	
				pod_color_icon_tab = {
					#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue('POD_color_channel_alpha_4'),'(CFixedPoint)1')]"
					visible = "[Scope.Var('POD_portrait_clothing_4_r').IsSet]"
					blockoverride "red"   { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_4_r').GetValue)]" }
					blockoverride "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_4_g').GetValue)]" }
					blockoverride "blue"  { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_4_b').GetValue)]" }
				}
	
				text_single = {
					raw_text = "4"
					parentanchor = center
					default_format = @tabformat
				}
			}
			
			button_tab = {
				size = { 0 38 }
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '5' )]"
				down = "[GetVariableSystem.HasValue( 'POD_clothing_color_tab', '5' )]"
	
				pod_color_icon_tab = {
					#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue('POD_color_channel_alpha_5'),'(CFixedPoint)1')]"
					visible = "[Scope.Var('POD_portrait_clothing_5_r').IsSet]"
					blockoverride "red"   { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_5_r').GetValue)]" }
					blockoverride "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_5_g').GetValue)]" }
					blockoverride "blue"  { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_5_b').GetValue)]" }
				}
	
				text_single = {
					raw_text = "5"
					parentanchor = center
					default_format = @tabformat
				}
			}
			
			button_tab = {
				size = { 0 38 }
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '6' )]"
				down = "[GetVariableSystem.HasValue( 'POD_clothing_color_tab', '6' )]"
	
				pod_color_icon_tab = {
					#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue('POD_color_channel_alpha_6'),'(CFixedPoint)1')]"
					visible = "[Scope.Var('POD_portrait_clothing_6_r').IsSet]"
					blockoverride "red"   { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_6_r').GetValue)]" }
					blockoverride "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_6_g').GetValue)]" }
					blockoverride "blue"  { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_6_b').GetValue)]" }
				}
	
				text_single = {
					raw_text = "6"
					parentanchor = center
					default_format = @tabformat
				}
			}
			
			button_tab = {
				size = { 0 38 }
				layoutpolicy_horizontal = expanding
				onclick = "[GetVariableSystem.Set( 'POD_clothing_color_tab', '7' )]"
				down = "[GetVariableSystem.HasValue( 'POD_clothing_color_tab', '7' )]"
	
				pod_color_icon_tab = {
					#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue('POD_color_channel_alpha_7'),'(CFixedPoint)1')]"
					visible = "[Scope.Var('POD_portrait_clothing_7_r').IsSet]"
					blockoverride "red"   { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_7_r').GetValue)]" }
					blockoverride "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_7_g').GetValue)]" }
					blockoverride "blue"  { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_7_b').GetValue)]" }
				}
	
				text_single = {
					raw_text = "7"
					parentanchor = center
					default_format = @tabformat
				}
			}
			
			spacer = { size = { 8 0 } }
			
			button_clear = {
				alpha = 0.65
				onclick = "[GetScriptedGui('POD_portrait_clothing_clear').Execute(GuiScope.SetRoot(Character.MakeScope).End)]"
				tooltip = "POD_style_clear_tt"
				#color = { 0.6 0.7 1.0 1.0 }
				using = POD_flat_icon_shadow
			}
			
			button_replace = {
				alpha = 0.65
				onclick = "[GetScriptedGui('POD_portrait_clothing_reset').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
				tooltip = "POD_style_undo_tt"
				#color = { 0.6 0.7 1.0 1.0 }
				using = POD_flat_icon_shadow
			}
			
			button_copy = {
				alpha = 0.65
				onclick = "[GetScriptedGui('POD_portrait_clothing_copy').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
				tooltip = "POD_style_copy_tt"
				#color = { 0.6 0.7 1.0 1.0 }
				using = POD_flat_icon_shadow
			}
			
			button_paste = {
				alpha = 0.65
				onclick = "[GetScriptedGui('POD_portrait_clothing_paste').Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
				tooltip = "POD_style_paste_tt"
				#color = { 0.6 0.7 1.0 1.0 }
				using = POD_flat_icon_shadow
			}
			
			spacer = { size = { 8 0 } }
		}
	
		vbox = {
			layoutpolicy_horizontal = expanding
	
			margin = { 24 8 }
	
			background = {
				using = Background_Area
				#margin_top = 4
			}
	
			hbox = {
				layoutpolicy_horizontal = expanding
				margin_top = 6
				
				widget = {
					size = { 32 32 }

					pod_color_icon = {
						#visible = "[EqualTo_CFixedPoint(Scope.ScriptValue(Concatenate('POD_color_channel_alpha_',PODClothingColorTab)),'(CFixedPoint)1')]"
						visible = @channel_has_color

						size = { 100% 100% }
						blockoverride "red"   { alpha = "[FixedPointToFloat(PODCurrentChannelR)]" }
						blockoverride "green" { alpha = "[FixedPointToFloat(PODCurrentChannelG)]" }
						blockoverride "blue"  { alpha = "[FixedPointToFloat(PODCurrentChannelB)]" }
						
						background = {
							texture = "gfx/interface/colors/white.dds"
							alpha = 0.5
							margin = { 2 2 }
						}
						background = {
							texture = "gfx/interface/colors/black.dds"
							alpha = 1.0
							margin = { 1 1 }
						}
					}
				}
	
				spacer = { size = { 16 0 } }
				
				text_single = {
					text = "POD_style_channel_header"
					using = Font_Type_Flavor
					
					margin_top = -5
					fontsize = 25
					default_format = "#glow_color:{0,0,0,1}"
				}
				
				expand = {}

				button_clear = {
					visible = @channel_has_color
					onclick = "[GetScriptedGui(Concatenate('POD_portrait_clothing_clear_',PODClothingColorTab)).Execute(GuiScope.SetRoot(Character.MakeScope).End)]"
					tooltip = "POD_style_clear_single_tt"
					using = POD_flat_icon_shadow
				}

				button_icon = {
					texture = "gfx/interface/icons/flat_icons/army_split.dds"
					visible = @channel_has_color
					onclick = "[GetScriptedGui(Concatenate('POD_portrait_clothing_copy_',PODClothingColorTab)).Execute(GuiScope.SetRoot(Character.MakeScope).End)]"
					tooltip = "POD_style_copy_channel_tt"
					using = POD_flat_icon_shadow
				}

				button_icon = {
					texture = "gfx/interface/icons/flat_icons/star.dds"
					visible = @channel_has_color
					onclick = "[GetScriptedGui(Concatenate('POD_portrait_clothing_save_',PODClothingColorTab)).Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('player',GetPlayer.MakeScope).End)]"
					tooltip = "POD_style_save_single_tt"
					using = POD_flat_icon_shadow
				}
			}
	
			spacer = { size = { 0 8 } }
	
			pod_clothing_shader_preset_selector = {
				blockoverride "label" {
					text = "POD_select_color_preset"
				}
				blockoverride "datacontext" {
					datacontext = "[GetScriptedGui(Concatenate('POD_select_clothing_preset_channel_',PODClothingColorTab))]"
				}
			}
			
			pod_clothing_shader_preset_selector = {
				enabled = "[PlayerGuiIsShown('POD_portrait_clothing_has_saved_colors')]"
				blockoverride "label" {
					text = "POD_select_saved_color"
				}
				blockoverride "color_datamodel" {
					datamodel = "[GetPlayer.MakeScope.GetList('POD_saved_colors')]"
				}
				blockoverride "size_button" {
					size = { 200 33 }
				}
				blockoverride "datacontext" {
					datacontext = "[GetScriptedGui(Concatenate('POD_select_saved_color_channel_',PODClothingColorTab))]"
				}
				blockoverride "color_text" {
					raw_text = "[GuiScope.SetRoot(Scope.Story.MakeScope).Custom('PODSavedColor')]"
				}
				blockoverride "color_onclick" {
					onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('story',Scope.Story.MakeScope).End)]"
				}
				blockoverride "default_text" {
					text = "POD_set_saved_color_tt"
				}
				blockoverride "secondary_button" {
					widget = {
						alwaystransparent = no
						size = { 50 33 }
						parentanchor = right
						button_clear = {
							parentanchor = center
							onclick = "[GetScriptedGui('POD_clear_saved_color').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('story',Scope.Story.MakeScope).End)]"
							tooltip = POD_clear_saved_color_confirm_title
						}
					}
				}
			}
	
			spacer = { size = { 0 8 } }

			widget = {
				size = { 0 198 }
				layoutpolicy_horizontal = expanding

				vbox = {
					visible = "[Not(Scope.Var(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_r')).IsSet)]"
					layoutpolicy_horizontal = expanding
	
					pod_portrait_color_editor = {
						margin_top = 3
						blockoverride "label" {
							text = "POD_hue"
						}
						blockoverride "datacontext_edit" {
							#datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_b_edit'))]"
							visible = no
						}
						blockoverride "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_h_set'))]"
						}
						blockoverride "effect" {
							effectname = "ColorDisplayHueGradient"
						}
						blockoverride "red"   { alpha = "[EmptyScope.ScriptValue('POD_initial_color_max')]" }
						blockoverride "green" { alpha = "[EmptyScope.ScriptValue('POD_initial_color_min')]" }
						blockoverride "blue"  { alpha = "[EmptyScope.ScriptValue('POD_initial_color_min')]" }
						blockoverride "marker_visibility" { visible = no }
					}

					expand = {}

					text_single = {
						text = "POD_style_hint"
						default_format = "#weak"
					}

					expand = {}
				}

				vbox = {
					visible = @channel_has_color
					layoutpolicy_horizontal = expanding
	
					pod_portrait_color_editor = {
						blockoverride "label" {
							text = "POD_hue"
						}
						blockoverride "variable" {
							raw_text = "[RGB2H( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) )|2]"
						}
						blockoverride "marker_pos" {
							min_width = "[FixedPointToInt(Multiply_CFixedPoint( RGB2H( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) ),'(CFixedPoint)200'))]"
							max_width = "[FixedPointToInt(Multiply_CFixedPoint( RGB2H( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) ),'(CFixedPoint)200'))]"
						}
						blockoverride "datacontext_edit" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_h_edit'))]"
						}
						blockoverride "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_h_set'))]"
						}
						blockoverride "effect" {
							effectname = "ColorDisplayHueGradient"
						}
						blockoverride "red"   { alpha = "[FixedPointToFloat(PODCurrentChannelR)]" }
						blockoverride "green" { alpha = "[FixedPointToFloat(PODCurrentChannelG)]" }
						blockoverride "blue"  { alpha = "[FixedPointToFloat(PODCurrentChannelB)]" }
					}
					pod_portrait_color_editor = {
						blockoverride "label" {
							text = "POD_saturation"
						}
						blockoverride "variable" {
							raw_text = "[RGB2S( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) )|2]"
						}
						blockoverride "marker_pos" {
							min_width = "[FixedPointToInt(Multiply_CFixedPoint( RGB2S( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) ),'(CFixedPoint)200'))]"
							max_width = "[FixedPointToInt(Multiply_CFixedPoint( RGB2S( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) ),'(CFixedPoint)200'))]"
						}
						blockoverride "datacontext_edit" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_s_edit'))]"
						}
						blockoverride "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_s_set'))]"
						}
						blockoverride "effect" {
							effectname = "ColorDisplaySaturationGradient"
						}
						blockoverride "red"   { alpha = "[FixedPointToFloat(PODCurrentChannelR)]" }
						blockoverride "green" { alpha = "[FixedPointToFloat(PODCurrentChannelG)]" }
						blockoverride "blue"  { alpha = "[FixedPointToFloat(PODCurrentChannelB)]" }
					}
					pod_portrait_color_editor = {
						blockoverride "label" {
							text = "POD_value"
						}
						blockoverride "variable" {
							raw_text = "[RGB2V( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) )|2]"
						}
						blockoverride "marker_pos" {
							min_width = "[FixedPointToInt(Multiply_CFixedPoint( RGB2V( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) ),'(CFixedPoint)200'))]"
							max_width = "[FixedPointToInt(Multiply_CFixedPoint( RGB2V( MakeScopeValue(PODCurrentChannelR), MakeScopeValue(PODCurrentChannelG), MakeScopeValue(PODCurrentChannelB) ),'(CFixedPoint)200'))]"
						}
						blockoverride "datacontext_edit" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_v_edit'))]"
						}
						blockoverride "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_v_set'))]"
						}
						blockoverride "effect" {
							effectname = "ColorDisplayValueGradient"
						}
						blockoverride "red"   { alpha = "[FixedPointToFloat(PODCurrentChannelR)]" }
						blockoverride "green" { alpha = "[FixedPointToFloat(PODCurrentChannelG)]" }
						blockoverride "blue"  { alpha = "[FixedPointToFloat(PODCurrentChannelB)]" }
					}
			
					spacer = { size = { 0 18 } }
			
					pod_portrait_color_editor = {
						blockoverride "label" {
							text = "POD_red_glow"
						}
						blockoverride "variable" {
							raw_text = "[PODCurrentChannelR|2]"
						}
						blockoverride "marker_pos" {
							min_width = "[FixedPointToInt(Multiply_CFixedPoint(PODCurrentChannelR,'(CFixedPoint)200'))]"
							max_width = "[FixedPointToInt(Multiply_CFixedPoint(PODCurrentChannelR,'(CFixedPoint)200'))]"
						}
						blockoverride "datacontext_edit" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_r_edit'))]"
						}
						blockoverride "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_r_set'))]"
						}
						blockoverride "effect" {
							effectname = "ColorDisplayRedGradient"
						}
						blockoverride "red"   { alpha = "[FixedPointToFloat(PODCurrentChannelR)]" }
						blockoverride "green" { alpha = "[FixedPointToFloat(PODCurrentChannelG)]" }
						blockoverride "blue"  { alpha = "[FixedPointToFloat(PODCurrentChannelB)]" }
					}
					pod_portrait_color_editor = {
						blockoverride "label" {
							text = "POD_green_glow"
						}
						blockoverride "variable" {
							raw_text = "[PODCurrentChannelG|2]"
						}
						blockoverride "marker_pos" {
							min_width = "[FixedPointToInt(Multiply_CFixedPoint(PODCurrentChannelG,'(CFixedPoint)200'))]"
							max_width = "[FixedPointToInt(Multiply_CFixedPoint(PODCurrentChannelG,'(CFixedPoint)200'))]"
						}
						blockoverride "datacontext_edit" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_g_edit'))]"
						}
						blockoverride "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_g_set'))]"
						}
						blockoverride "effect" {
							effectname = "ColorDisplayGreenGradient"
						}
						blockoverride "red"   { alpha = "[FixedPointToFloat(PODCurrentChannelR)]" }
						blockoverride "green" { alpha = "[FixedPointToFloat(PODCurrentChannelG)]" }
						blockoverride "blue"  { alpha = "[FixedPointToFloat(PODCurrentChannelB)]" }
					}
					pod_portrait_color_editor = {
						blockoverride "label" {
							text = "POD_blue_glow"
						}
						blockoverride "variable" {
							raw_text = "[PODCurrentChannelB|2]"
						}
						blockoverride "marker_pos" {
							min_width = "[FixedPointToInt(Multiply_CFixedPoint(PODCurrentChannelB,'(CFixedPoint)200'))]"
							max_width = "[FixedPointToInt(Multiply_CFixedPoint(PODCurrentChannelB,'(CFixedPoint)200'))]"
						}
						blockoverride "datacontext_edit" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_b_edit'))]"
						}
						blockoverride "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_b_set'))]"
						}
						blockoverride "effect" {
							effectname = "ColorDisplayBlueGradient"
						}
						blockoverride "red"   { alpha = "[FixedPointToFloat(PODCurrentChannelR)]" }
						blockoverride "green" { alpha = "[FixedPointToFloat(PODCurrentChannelG)]" }
						blockoverride "blue"  { alpha = "[FixedPointToFloat(PODCurrentChannelB)]" }
					}
				}
			}
		}

		widget = {
			size = { 0 46 }
			
			text_single = {
				text = "POD_style_current_clothing_colors"
				parentanchor = center
				position = { 0 -2 }
			}

		}
	}

	expand = {}
}

types PODClothingShaderTypes
{
	type pod_color_icon = icon
	{
		texture = "gfx/interface/component_masks/mask_rough_edges.dds"

		shaderfile = "gfx/FX/POD_shaders/POD_event_shaders.shader"
		block "effect" { effectname = "ColorDisplay" }
	
		modify_texture = {
			texture = @transparent_pixel
			blend_mode = normal
			block "red" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_1_r').GetValue)]" }
		}
	
		modify_texture = {
			texture = @transparent_pixel
			blend_mode = normal
			block "green" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_1_g').GetValue)]" }
		}
		
		modify_texture = {
			texture = @transparent_pixel
			blend_mode = normal
			block "blue" { alpha = "[FixedPointToFloat(Scope.Var('POD_portrait_clothing_1_b').GetValue)]" }
		}
	}
	type pod_color_icon_tab = pod_color_icon
	{
		texture = "gfx/interface/component_masks/mask_fade_vertical.dds"

		parentanchor = hcenter
		size = { 100% 100% }

		modify_texture = {
			texture = "gfx/interface/buttons/button_tab.dds"
			frame = 4
			blend_mode = alphamultiply

			spriteType = Corneredtiled
			spriteborder = { 10 10 }
			framesize = { 198 53 }
		}
	}
	type pod_portrait_color_editor = hbox
	{
		layoutpolicy_horizontal = expanding
		#spacing = 6
		text_single = {
			#max_width = 100
			block "label" {
				raw_text = "" 
			}
		}
		expand = {}
		hbox = {
			block "datacontext_edit" {}
			#pod_portrait_shader_double_subtract = {}
			button_minus = {
				#size = { 32 32 }
				#texture = "gfx/interface/icons/flat_icons/minus.dds"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('delta',MakeScopeValue('(CFixedPoint)-0.01')).End)]"
			}
			text_label_center = {
				min_width = 42
				block "variable" {
					raw_text = ""
				}
				default_format = "#bold"
			}
			button_plus = {
				#size = { 32 32 }
				#texture = "gfx/interface/icons/flat_icons/plus.dds"
				onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('delta',MakeScopeValue('(CFixedPoint)0.01')).End)]"
			}
			#pod_portrait_shader_double_add = {}
		}
		spacer = { size = { 12 0 } }
		widget = {
			size = { 200 24 }

			pod_color_icon = {
				texture = "gfx/interface/component_masks/mask_fade_textured_vertical_down.dds"
				size = { 100% 100% }
	
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_textured_vertical_up.dds"
					blend_mode = alphamultiply
				}
				
				background = {
					texture = "gfx/interface/colors/black.dds"
					alpha = 0.2
					margin = { 3 2 }
				}
				background = {
					texture = "gfx/interface/colors/grey.dds"
					alpha = 0.4
					margin = { 0 -1 }
				}
			}

			widget = {
				block "marker_visibility" {}
				block "marker_pos" {
					min_width = 100
					max_width = 100
				}
				parentanchor = left|vcenter

				icon = {
					size = { 1 24 }
					parentanchor = right|vcenter
					alwaystransparent = yes
					texture = "gfx/interface/colors/gold.dds"
	
					background = {
						texture = "gfx/interface/colors/black.dds"
						alpha = 0.5
						margin = { 2 2 }
					}
				}
			}

			fixedgridbox = {
				block "row" {
					addrow = 24
					addcolumn = 1
				}
				setitemsizefromcell = yes
				datamodel = "[DataModelFirst(GetAllTraits, '(int32)200')]"
				flipdirection = yes
			
				item = {
					button = {
						block "datacontext_set" {
							datacontext = "[GetScriptedGui(Concatenate3('POD_portrait_clothing_',PODClothingColorTab,'_r_set'))]"
						}
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Character.MakeScope ).AddScope('new_value', MakeScopeValue(Divide_CFixedPoint(IntToFixedPoint(PdxGuiWidget.GetIndexInDataModel),'(CFixedPoint)200'))).End )]"
						onmousehierarchyenter = "[PdxGuiWidget.FindChild('glow').Show]"
						onmousehierarchyleave = "[PdxGuiWidget.FindChild('glow').Hide]"
				
						icon = {
							name = "glow"
							visible = no
							size = { 100% 100% }
							parentanchor = center
							alwaystransparent = yes
							texture = "gfx/interface/colors/white.dds"

							background = {
								texture = "gfx/interface/colors/black.dds"
								margin = { 2 2 }
							}
						}
					}
				}
			}
		}
	}
	type pod_clothing_shader_preset_selector = hbox
	{
		layoutpolicy_horizontal = expanding
		spacing = 6
		text_label_left = {
			block "label" {
				raw_text = "" 
			}
		}
		expand = {}
		pod_clothing_shader_dropdown = {
			block "datacontext" {}
		}
	}
	type pod_clothing_shader_dropdown = dropDown
	{
		block "color_datamodel" {
			datamodel = "[EventWindowWidget.GetScope.GetRootScope.GetList('POD_color_presets')]"
		}

		block "size_button_drop" {
			size = { 200 33 }
		}

		active_item = {
			widget = {
				alwaystransparent = no
				size = { 100% 100% }

				button_drop = {
					block "default_text" {
						text = "POD_set_color_tt"
					}
				}
			}
		}

		item = {
			widget = {
				alwaystransparent = no
				block "size_dropdown" {
					size = { 200 33 }
				}

				button_dropdown = {
					block "size_button" {
						size = { 200 33 }
					}
					block "color_text" {
						text = "[Localize( Concatenate( Scope.GetFlagKey, '_tt' ) )]"
					}
					margin_left = 0
					align = center|nobaseline
					button = {
						size = { 100% 100% }
						block "color_onclick" {
							onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(Character.MakeScope).AddScope('flag',MakeScopeFlag(Scope.GetFlagKey)).End)]"
						}
					}
				}
				block "secondary_button" {

				}
			}
		}

		list = {
			scrollarea = {
				position = { 5 33 }
				maximumsize = { 225 250 }
				autoresizescrollarea = yes
				scrollbarpolicy_horizontal = always_off

				using = Background_DropDown

				scrollwidget = {
					dynamicgridbox = {
						alwaystransparent = yes
					}
				}

				scrollbar_vertical = {
					using = Scrollbar_Vertical
				}
			}
		}
	}
}