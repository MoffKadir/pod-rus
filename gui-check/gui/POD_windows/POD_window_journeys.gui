window = {
	name = "journeys_view"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	
	using = Window_Size_MainTab
	
	visible = "[And(And(GetVariableSystem.HasValue('pod_sidebar', 'journey'), Not(IsRightWindowOpen)), IsSidebarVisibilityValid)]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetVariableSystem.Set( 'journey_view_tabs', 'journey_list' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins
				
				####################################
				##### HEADER & JOURNEY DETAILS #####
				####################################
				journey_header = {
					layoutpolicy_horizontal = expanding
					filter_mouse = all

					vbox = {
						margin_top = 42
						margin_bottom = 12
						margin_left = 12
						margin_right = 12
						layoutpolicy_vertical = expanding
						hbox = {
							layoutpolicy_horizontal = expanding
							visible = "[Not(GetPlayer.MakeScope.Var('current_journey').IsSet)]"
							
							text_label_center = {
								text = "POD_no_journey_selected"
								default_format = "#low;italic"
								margin_top = 2
								margin_bottom = 8
							}
						}
						
						hbox = {
							layoutpolicy_horizontal = fixed
							spacing = 0
							#spacing = 16
							visible = "[GetPlayer.MakeScope.Var('current_journey').IsSet]"
							
							background = {
								margin_left = 30
								margin_right = -80
								margin_top = 8
								margin_bottom = 18
								#alpha = 0.95

								texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
								spriteType = Corneredtiled
								spriteborder = { 40 8 }
								texture_density = 2

								tintcolor = { 1 1 1 1 }

								modify_texture = {
									name = "mask"
									texture = "gfx/interface/component_masks/mask_fade_horizontal.dds"
									spriteType = Corneredstretched
									spriteborder = { 0 0 }
									blend_mode = alphamultiply
								}
							}
							
							text_single = {
								text = "POD_JOURNEY_DESC_NOPROGRESS"
								max_width = 360
								multiline = yes
								align = right
							}
							
							spacer = { min_width = 16 }
							
							vbox = {
								margin_top = 10
								layoutpolicy_vertical = expanding
								
								widget = {
									name = "player_journey_widget"
									datacontext = "[GetPlayer.MakeScope.Var('current_journey')]"
									#size = { 60 60 }
									size = { 120 120 }
									
									icon_round_button_base = {}

									icon = {
										name = "progress_frame"
										texture = "gfx/interface/progressbars/action_progress_frame.dds"
										alwaystransparent = yes
										size = { 100% 100% }
										parentanchor = center
										alpha = 0.5
									}

									progresspie = {
										name = "progress"
										#size = { 52 52 }
										size = { 104 104 }
										texture = "gfx/interface/progressbars/action_progress_thin.dds"
										framesize = { 128 128 }
										#framesize = { 248 248 }
										frame = 2
										widgetanchor = center
										parentanchor = center
										value = "[Multiply_float(FixedPointToFloat(PlayerJourneyProgress), '(float)0.01')]"
										min = 0
										max = 1
									}

									pod_journey_icon = {
										visible = "[EqualTo_string(PlayerJourneyPhase, 'travel_phase')]"
										
										position = { 0 0 }
										parentanchor = center
									}
									pod_journey_icon = {
										visible = "[Not(EqualTo_string(PlayerJourneyPhase, 'travel_phase'))]"
										
										position = { 0 -12 }
										parentanchor = center
									}
									text_single = {
										visible = "[Not(EqualTo_string(PlayerJourneyPhase, 'travel_phase'))]"
										
										layoutpolicy_horizontal = growing
										text = "POD_JOURNEY_GETPROGRESS"
										default_format = "#T;P"
										position = { 0 21 }
										parentanchor = center
									}
								}
							}
							vbox = {
								min_width = 30
								layoutpolicy_vertical = expanding
								spacing = 24
								
								spacer = {}
								
								button_abandon_journey = {
									visible = "[Not(EqualTo_string(PlayerJourneyPhase, 'travel_phase'))]"

									tooltip = "POD_abandon_journey_tt"
									onclick = "[GetScriptedGui('POD_abandon_journey_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('story',GetPlayer.MakeScope.Var('current_journey').Story.MakeScope).End)]"
								
									blockoverride "button1" {
										size = { 30 30 }
										tintcolor = { 1.0 0.95 0.7 1.0 }
									}
									blockoverride "button2" {
										size = { 20 20 }
										tintcolor = { 1.0 0.95 0.7 1.0 }
									}
								}
								
								expand = {}
							}
						}
					}
				}

				################
				##### TABS #####
				################
				hbox = {
					layoutpolicy_horizontal = expanding
					margin_bottom = 5

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'journey_view_tabs', 'journey_list' )]"
						down = "[GetVariableSystem.HasValue( 'journey_view_tabs', 'journey_list' )]"
						#down = "[Or( GetVariableSystem.HasValue( 'journey_view_tabs', 'journey_list' ), Not(GetVariableSystem.Exists('journey_view_tabs')) )]"

						text_single = {
							text = "JOURNEY_TAB_JOURNEYS"
							parentanchor = center

							maximumsize = { 400 -1 }
							default_format = "#low"
						}
					}

					button_tab = {
						layoutpolicy_horizontal = expanding
						onclick = "[GetVariableSystem.Set( 'journey_view_tabs', 'your_coterie' )]"
						down = "[GetVariableSystem.HasValue( 'journey_view_tabs', 'your_coterie' )]"

						text_single = {
							text = "JOURNEY_TAB_COTERIE"
							parentanchor = center

							maximumsize = { 400 -1 }
							default_format = "#low"
							alwaystransparent = yes
						}
					}
				}

				############################
				##### LIST OF JOURNEYS #####
				############################
				scrollbox = {
					name = "journeys_scrollarea"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					
					visible = "[GetVariableSystem.HasValue( 'journey_view_tabs', 'journey_list' )]"
					#visible = "[Or( GetVariableSystem.HasValue( 'journey_view_tabs', 'journey_list' ), Not(GetVariableSystem.Exists('journey_view_tabs')) )]"

					background = {
						#texture = "gfx/interface/illustrations/event_scenes/pod_spires.dds"
						texture = "gfx/interface/illustrations/event_scenes/pod_nightlandscape4.dds"
						fittype = end
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "scrollbox_content"
					{
						name = "journeys_main_container"
						spacing = 15
						
						container = { }

						vbox = {
							visible = "[PlayerGuiIsShown('POD_refresh_journeys_sgui')]"
							layoutpolicy_horizontal = expanding
							spacing = 15

							text_multi = {
								autoresize = yes
								max_width = 500
								align = center
								text = "POD_journey_refresh_prompt"
							}

							button_round = {
								alwaystransparent = no
						
								using = Animation_ShowHide_Quick
						
								onclick = "[PlayerGuiExecute('POD_refresh_journeys_sgui')]"
						
								button_replace = {
									parentanchor = center
									alwaystransparent = yes
								}
							}
						}

						vbox = {
							visible = "[Not(PlayerGuiIsShown('POD_refresh_journeys_sgui'))]"
							layoutpolicy_horizontal = expanding
							spacing = 15
						
							vbox = {
								name = "travel_ready_journeys"
								layoutpolicy_horizontal = expanding
								spacing = 15
								visible = "[PlayerGuiIsShown('POD_has_travel_ready_journeys')]"
								
								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 10
	
									text_label_center = {
										text = "POD_travel_ready_journeys"
										default_format = "#V"
									}
	
									vbox = {
										name = "journeys"
										datamodel = "[GetPlayer.MakeScope.GetList('paused_journeys')]"
										layoutpolicy_horizontal = expanding
										spacing = 8
	
										item = {
											hbox = {
												visible = "[StoryGuiIsValid('POD_journey_is_travel_ready')]"
												layoutpolicy_horizontal = expanding
	
												button_journey_entry = {
													layoutpolicy_horizontal = expanding
													
													enabled = "[StoryGuiIsValid('POD_journey_requirements')]"
													
													onclick = "[StoryGuiExecute('POD_resume_travel_ready_journey')]"
													
													clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_start_game"
													
													tooltip = "POD_travel_ready_journey_GUI_tooltip"
												}
		
												spacer = { min_width = 8 }
		
												button_abandon_journey = {
													visible = "[Not(EqualTo_string(PlayerJourneyPhase, 'travel_phase'))]"
		
													tooltip = "POD_abandon_journey_tt"
													onclick = "[StoryGuiExecute('POD_abandon_journey_sgui')]"
												}
											}
										}
									}
	
								}
	
								divider_light = {
									layoutpolicy_horizontal = expanding
								}
							}
							
							vbox = {
								name = "paused_journeys"
								layoutpolicy_horizontal = expanding
								spacing = 15
								visible = "[PlayerGuiIsShown('POD_has_paused_journeys')]"
								
								vbox = {
									layoutpolicy_horizontal = expanding
									spacing = 10
	
									text_label_center = {
										text = "POD_paused_journeys"
										default_format = "#V"
									}
	
									vbox = {
										name = "journeys"
										datamodel = "[GetPlayer.MakeScope.GetList('paused_journeys')]"
										layoutpolicy_horizontal = expanding
										spacing = 8
	
										item = {
											hbox = {
												visible = "[Not(StoryGuiIsValid('POD_journey_is_travel_ready'))]"
												layoutpolicy_horizontal = expanding
	
												button_journey_entry = {
													layoutpolicy_horizontal = expanding
													
													enabled = "[StoryGuiIsValid('POD_journey_requirements')]"
													
													onclick = "[StoryGuiExecute('POD_resume_paused_journey')]"
													
													clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_start_game"
													
													tooltip = "POD_paused_journey_GUI_tooltip"
												}
		
												spacer = { min_width = 8 }
		
												button_abandon_journey = {
													visible = "[Not(EqualTo_string(PlayerJourneyPhase, 'travel_phase'))]"
		
													tooltip = "POD_abandon_journey_tt"
													onclick = "[StoryGuiExecute('POD_abandon_journey_sgui')]"
												}
											}
										}
									}
	
								}
	
								divider_light = {
									layoutpolicy_horizontal = expanding
								}
							}
	
							vbox = {
								name = "journeys_container"
								layoutpolicy_horizontal = expanding
								spacing = 10
	
								text_label_center = {
									text = "POD_journeys"
								}
	
								vbox = {
									name = "journeys"
									datamodel = "[GetGlobalList('journey_GUI_list')]"
									layoutpolicy_horizontal = expanding
									spacing = 8
	
									item = {
										button_journey_entry = {
											visible = "[And( PlayerGuiIsShown( Concatenate( ScopedJourneyID, '_requirements' ) ), StoryGuiIsShown('POD_journey_requirements') )]"
											layoutpolicy_horizontal = expanding
											
											onclick = "[StoryGuiExecute('POD_journey_detail_open')]"
											
											down = "[StoryGuiIsValid('POD_journey_is_selected')]"
											
											tooltip = "POD_journey_GUI_tooltip"
										}
									}
								}
	
							}
	
							divider_light = {
								layoutpolicy_horizontal = expanding
								visible = "[PlayerGuiIsShown('POD_show_great_journeys')]"
							}
	
							vbox = {
								name = "great_journeys_container"
								layoutpolicy_horizontal = expanding
								spacing = 10
								visible = "[PlayerGuiIsShown('POD_show_great_journeys')]"
	
								text_label_center = {
									text = "POD_great_journeys"
								}
	
								vbox = {
									name = "great_journeys"
									datamodel = "[GetGlobalList('great_journey_GUI_list')]"
									layoutpolicy_horizontal = expanding
									spacing = 8
	
									item = {
										button_journey_entry = {
											visible = "[And( PlayerGuiIsShown( Concatenate( ScopedJourneyID, '_requirements' ) ), StoryGuiIsShown('POD_journey_requirements') )]"
											layoutpolicy_horizontal = expanding
											
											onclick = "[StoryGuiExecute('POD_journey_detail_open')]"
											
											down = "[StoryGuiIsValid('POD_journey_is_selected')]"
											
											tooltip = "POD_journey_GUI_tooltip"
										}
									}
								}
							}
						}
					}
				}

				########################
				##### COTERIE VIEW #####
				########################
				scrollbox = {
					name = "coterie_scrollarea"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					
					visible = "[GetVariableSystem.HasValue( 'journey_view_tabs', 'your_coterie' )]"

					background = {
						texture = "gfx/interface/illustrations/event_scenes/courtyard_night.dds"
						fittype = start
						alpha = 0.4
						framesize = { 1200 848 }

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							#mirror = vertical
						}
					}

					blockoverride "scrollbox_content"
					{
						name = "coterie_main_container"
						spacing = 15
						
						container = { }
						
						vbox = {
							name = "coterie_creation_container"
							layoutpolicy_horizontal = expanding
							
							visible = "[Not(PlayerGuiIsValid('POD_has_coterie_sgui'))]"
							
							button_coterie_interaction = {
								#blockoverride "coterie_interaction_texture" {
								#	texture = ""
								#}
								blockoverride "coterie_interaction_title" {
									text = "POD_create_a_new_coterie"
								}
								
								enabled = "[PlayerGuiIsValid('POD_create_coterie_sgui')]"
								onclick = "[PlayerGuiExecute('POD_create_coterie_sgui')]"
								tooltip = "POD_create_coterie_interaction_desc"
							}
						}
						vbox = {
							name = "coterie_management_container"
							layoutpolicy_horizontal = expanding
							spacing = 8
							
							visible = "[PlayerGuiIsValid('POD_has_coterie_sgui')]"
							
							hbox = {
								layoutpolicy_horizontal = expanding
								spacing = 18

								spacer = {}

								coa_house_huge = {
									visible = "[IsManuallyPaused]"
									datacontext = "[GetPlayer.MakeScope.Var('coterie').Var('coa_dummy').Char.GetHouse]"

									blockoverride "coa_button" {
										onmousehierarchyenter = "[PlayerGuiExecute('POD_summon_coterie_coa_dummy')]"
										onclick = "[OpenHouseCustomizationWindow(DynastyHouse.Self)]"
										tooltip = POD_edit_coterie_coa_tt
									}
								}

								# Second version of the CoA button that force-pauses your game when you click it
								# because stuff breaks if the CoA dummy character leaves your court
								coa_house_huge = {
									visible = "[Not(IsManuallyPaused)]"
									datacontext = "[GetPlayer.MakeScope.Var('coterie').Var('coa_dummy').Char.GetHouse]"

									blockoverride "coa_button" {
										onmousehierarchyenter = "[PlayerGuiExecute('POD_summon_coterie_coa_dummy')]"
										onclick = "[OnPause]"
										onclick = "[OpenHouseCustomizationWindow(DynastyHouse.Self)]"
										tooltip = POD_edit_coterie_coa_tt
									}
								}

								text_multi = {
									text = "[GetPlayer.Custom('PODGetCoterieBreakdown')]"
									autoresize = yes
									max_width = 350
									align = center

									margin_top = 12
									margin_bottom = 20
									margin_left = 32
									margin_right = 32
							
									background = {
										margin_left = 40
										margin_right = 40
										# alpha = 0.5
							
										texture = "gfx/interface/component_tiles/tile_title_bg_01.dds"
										spriteType = Corneredtiled
										spriteborder = { 40 8 }
										texture_density = 2
							
										modify_texture = {
											name = "mask"
											texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
											spriteType = Corneredstretched
											spriteborder = { 0 0 }
											blend_mode = alphamultiply
										}
									}
								}

								expand = {}
							}
						
							container = { }
							
							text_label_center = {
								text = "POD_coterie_gui_members"
							}
							
							hbox = {
								datamodel = "[GetPlayer.MakeScope.Var('coterie').GetList('members')]"
								visible = "[LessThanOrEqualTo_int32(GetDataModelSize( GetPlayer.MakeScope.Var('coterie').GetList('members') ), '(int32)4')]"
								
								item = {
									portrait_head = {
										name = "coterie_member"
										datacontext = "[Scope.Char]"
									}
								}
							}
							
							hbox = {
								datamodel = "[GetPlayer.MakeScope.Var('coterie').GetList('members')]"
								visible = "[GreaterThan_int32(GetDataModelSize( GetPlayer.MakeScope.Var('coterie').GetList('members') ), '(int32)4')]"
								
								item = {
									portrait_head_small = {
										name = "coterie_member"
										datacontext = "[Scope.Char]"
									}
								}
							}
						
							container = { }

							divider_light = {
								layoutpolicy_horizontal = expanding
							}
						
							container = { }
							
							button_coterie_interaction = {
								size = { -1 45 }
								blockoverride "size_illustration" {
									size = { 250 43 }
								}
								blockoverride "coterie_interaction_texture" {
									texture = "gfx/interface/illustrations/decisions/decision_misc.dds"
								}
								blockoverride "coterie_interaction_title" {
									text = "POD_rename_your_coterie"
								}
								
								enabled = "[PlayerGuiIsValid('POD_rename_coterie_sgui')]"
								onclick = "[PlayerGuiExecute('POD_rename_coterie_sgui')]"
							}
							
							button_coterie_interaction = {
								size = { -1 45 }
								blockoverride "size_illustration" {
									size = { 250 43 }
								}
								blockoverride "coterie_interaction_texture" {
									texture = "gfx/interface/illustrations/decisions/decision_realm.dds"
								}
								blockoverride "coterie_interaction_title" {
									text = "POD_disband_your_coterie"
								}
								
								enabled = "[PlayerGuiIsValid('POD_disband_coterie_sgui')]"
								onclick = "[PlayerGuiExecute('POD_disband_coterie_sgui')]"
							}
						}
					}
				}
			}
		}
	}
}


types Journeys
{
	type button_journey_entry = button_standard {
		size = { -1 65 }
		
		layoutpolicy_horizontal = expanding

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 63 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				block "journey_illustration" {
					texture = "[GetCultureInnovationType(Concatenate(ScopedJourneyID,'_illustration')).GetIcon]"
				}
				alpha = 0.7

				# Non-grayscale icon display:
				# - Always show this icon if this is a paused journey.
				# - If this is a journey from the global variable list, show this icon when both the generic requirements for all journeys and the specific requirements for this journey are fulfilled.
				# - If neither are true, hide this icon (and show the greyscale version instead, in the next block)
				block "journey_is_enabled" {
					visible = "[Or( StoryGuiIsValid('POD_journey_is_paused'), And( PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') ) )]"
				}

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}

			highlight_icon = {
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				block "journey_illustration" {
					texture = "[GetCultureInnovationType(Concatenate(ScopedJourneyID,'_illustration')).GetIcon]"
				}
				alpha = 0.7

				block "journey_is_disabled" {
					visible = "[Not( Or( StoryGuiIsValid('POD_journey_is_paused'), And( PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') ) ) )]"
				}

				effectname = "GreyedOut"

				tintcolor = { 0.6 0.6 0.6 0.7 }

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 16 0 }
			margin_right = 10
			
			pod_journey_icon = {
				block "journey_is_enabled" {
					visible = "[Or( StoryGuiIsValid('POD_journey_is_paused'), And( PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') ) )]"
				}
			}
			
			pod_journey_icon = {
				blockoverride "effect" { effectname = "GreyedOut" }
				
				block "journey_is_disabled" {
					visible = "[Not( Or( StoryGuiIsValid('POD_journey_is_paused'), And( PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') ) ) )]"
				}
			}
			
			container = { min_width = 16 }

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				block "journey_name" {
					text = "[Scope.Story.Custom('PODShowJourneyName')]"
				}
				block "journey_is_enabled" {
					visible = "[Or( StoryGuiIsValid('POD_journey_is_paused'), And( PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') ) )]"
				}
				default_format = "#clickable"
				align = nobaseline
				alwaystransparent = yes
			}

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title2"
				block "journey_name" {
					text = "[Scope.Story.Custom('PODShowJourneyName')]"
				}
				block "journey_is_disabled" {
					visible = "[Not( Or( StoryGuiIsValid('POD_journey_is_paused'), And(PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') ) ) )]"
				}
				default_format = "#low"
				align = nobaseline
				alwaystransparent = yes
			}

			block "totalprogress" {
				hbox = {
					margin_right = 24
					block "show_journey_progress" {
						visible = "[StoryGuiIsValid('POD_journey_is_paused')]"
					}
					
					text_label_center = {
						#layoutpolicy_horizontal = growing
						#align = right
						name = "progress"
						raw_text = "[Scope.Var('total_progress').GetValue|0]%"
						default_format = "#T;I"
						fontsize = 22
						margin_top = 2
						margin_bottom = 8
					}
				}
			}
		}
	}
	
	type button_coterie_interaction = button_standard {
		size = { -1 65 }
		layoutpolicy_horizontal = expanding

		widget = {
			scissor = yes
			parentanchor = right|top

			block "size_illustration" {
				size = { 250 63 }
			}

			icon = {
				name = "illustration"
				parentanchor = right|top
				size = { 250 100 }

				mirror = horizontal
				block "coterie_interaction_texture" {
					texture = "gfx/interface/illustrations/decisions/decision_recruitment.dds"
				}
				alpha = 0.7

				using = Mask_Rough_Edges

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_extended.dds"
					blend_mode = alphamultiply
				}
			}
		}

		hbox = {
			margin = { 24 0 }

			text_single = {
				layoutpolicy_horizontal = growing
				name = "title"
				block "coterie_interaction_title" {
					raw_text = "PLACEHOLDER"
				}
				default_format = "#clickable"
				align = nobaseline
				alwaystransparent = yes
			}
		}
	}

	type button_abandon_journey = button_icon {
		block "button1" { size = { 37.5 37.5 } }
		filter_mouse = all
		texture = "gfx/interface/buttons/button_round_big.dds"

		button_icon = {
			name = "abandon_journey"
			texture = "gfx/interface/icons/flat_icons/window_close.dds"
			parentanchor = center
			alwaystransparent = yes
			
			block "button2" { size = { 25 25 } }
		}
	}

	# based on widget_header_with_picture
	type journey_header = widget {
		name = "header"
		size = { 0 240 }

		journey_header_bg = {
			visible = "[Not(GetPlayer.MakeScope.Var('current_journey').IsSet)]"
		}

		journey_header_bg = {
			visible = "[GetPlayer.MakeScope.Var('current_journey').IsSet]"
			blockoverride "illustration_texture" {
				texture = "[GetCultureInnovationType(Concatenate(PlayerJourneyID,'_illustration')).GetIcon]"
				alpha = 0.2
			}
		}

		buttons_window_control = {
			parentanchor = top|right
			blockoverride "button_close" {
				onclick = "[PlayerGuiExecute('POD_journey_detail_close')]"
				onclick = "[GetVariableSystem.Clear('pod_sidebar')]"
			}
		}

		icon = {
			name = "header_text_bg"
			texture = "gfx/interface/component_masks/mask_header_text_bg.dds"
			parentanchor = top|hcenter
			color = { 0.3 0.3 0.3 0.8 }
		}

		text_single = {
			name = "header_text"
			parentanchor = top|hcenter
			position = { 0 3 }
			maximumsize = { 400 -1 }

			block "header_text" {
				text = "POD_journeys_hud"
			}

			using = Font_Type_Flavor
			using = Font_Size_Big
		}
	}

	type journey_header_bg = widget {
		parentanchor = top|hcenter

		size = { 100% 266 }

		background = {
			fittype = centercrop

			block "illustration_texture" {
				texture = "gfx/interface/illustrations/window_headers/header_my_realm.dds"
			}

			modify_texture = {
				texture = "gfx/interface/illustrations/window_headers/mask_header_illustration.dds"
				blend_mode = alphamultiply
			}
		}
	}
}
