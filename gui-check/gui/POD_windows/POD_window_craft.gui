window = {
	name = "pod_craft_window"
	parentanchor = top|right
	layer = windows_layer
	movable = no
	
	using = Window_Size_MainTab
	
	visible = "[And(And(GetVariableSystem.HasValue('pod_sidebar', 'craft'), Not(IsRightWindowOpen)), IsSidebarVisibilityValid)]"
	
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetScriptedGui('POD_crafting_minigame_crafter_selection').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('crafter',GetPlayer.MakeScope).End)]"
		on_start = "[GetScriptedGui('POD_crafting_minigame_node_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
		on_start = "[GetVariableSystem.Set( 'crafting_gui_tabs', 'forging' )]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
		using = Window_Position_MainTab_Hide
		on_start = "[GetScriptedGui('POD_crafting_minigame_node_list_clear').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
	}

	margin_widget = {
		size = { 100% 100% }
		margin = { 0 26 }
		margin_right = 13

		widget = {
			size = { 100% 100% }

			vbox = {
				using = Window_Margins
				
				##### HEADER TEXT #####
				widget_header_with_picture = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "CRAFTING_GUI_TITLE"
					}

					blockoverride "illustration_texture" {
						texture = "gfx/interface/illustrations/window_headers/header_activity.dds"

						using = Mask_Rough_Edges

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}

					blockoverride "button_close"
					{
						onclick = "[GetVariableSystem.Clear('pod_sidebar')]"
						onclick = "[GetVariableSystem.Clear('craft_tab_choice')]"
					}

					widget = {
						allow_outside = yes
						hbox = {
							position = { 20 25 }
							datacontext = "[GetPlayer.MakeScope.GetVariable('craft_creator').GetCharacter]"
							portrait_head_small = {
								blockoverride "tooltipwidget" {}
								button_change = {
									size = { 32 32 }
									position = { 60 70 }
									enabled = "[Not(GetPlayer.MakeScope.Var('crafting_minigame').IsSet)]"
									onclick = "[GetVariableSystem.Toggle('selecting_crafters')]"
								}
							}
						}
						vbox = {
							position = { 110 45 }
							datacontext = "[GetPlayer.MakeScope.GetVariable('craft_creator').GetCharacter]"
							text_single = { text = "[GetPlayer.MakeScope.GetVariable('craft_creator').GetCharacter.GetName]" }
							spacer = { size = { 0 10 } }
							hbox_skills_grid_character_model = { margin_left = 25 }
						}
						icon_trait = {
							position = { 450 38 }
							datacontext = "[GetPlayer.MakeScope.GetVariable('craft_creator').GetCharacter]"
							datacontext = "[GetTrait('pod_crafter')]"
							blockoverride "icon_size"
							{
								size = { 60 60 }
							}
						}
						hbox = {
							position = { 482 100 }
							parentanchor = center
							maximumsize = { 400 -1 }
							tooltip = "CRAFTING_GUI_MATERIALS_TOOLTIP"
							text_single = {
								text = "CRAFTING_GUI_MATERIALS"
								default_format = "#underline;bold"
							}
						}
						
					}
				}

				divider_light = { layoutpolicy_horizontal = expanding }

				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					hbox = {
						layoutpolicy_horizontal = expanding
						margin_bottom = 5
						button_tab = {
							layoutpolicy_horizontal = expanding
							onclick = "[GetVariableSystem.Set( 'crafting_gui_tabs', 'forging' )]"
							down = "[GetVariableSystem.HasValue( 'crafting_gui_tabs', 'forging' )]"

							text_single = {
								text = "CRAFTING_GUI_TABS_FORGE"
								parentanchor = center

								maximumsize = { 400 -1 }
								default_format = "#low"
							}
						}
						button_tab = {
							layoutpolicy_horizontal = expanding
							onclick = "[GetVariableSystem.Set( 'crafting_gui_tabs', 'brewing' )]"
							down = "[GetVariableSystem.HasValue( 'crafting_gui_tabs', 'brewing' )]"

							text_single = {
								text = "CRAFTING_GUI_TABS_BREWING"
								parentanchor = center

								maximumsize = { 400 -1 }
								default_format = "#low"
							}
						}
						button_tab = {
							layoutpolicy_horizontal = expanding
							onclick = "[GetVariableSystem.Set( 'crafting_gui_tabs', 'enhancing' )]"
							down = "[GetVariableSystem.HasValue( 'crafting_gui_tabs', 'enhancing' )]"

							text_single = {
								text = "CRAFTING_GUI_TABS_ENHANCING"
								parentanchor = center

								maximumsize = { 400 -1 }
								default_format = "#low"
							}
						}
					}
					vbox = {
						layoutpolicy_vertical = expanding
						layoutpolicy_horizontal = expanding
						crafting_gui_core = {
							visible = "[GetVariableSystem.HasValue( 'crafting_gui_tabs', 'forging' )]"
							blockoverride "background_texture"
							{
								texture = "gfx/interface/illustrations/event_scenes/armory_night.dds"
							}
							blockoverride "text_title"
							{
								text = "CRAFTING_GUI_FORGE_TITLE" 
								default_format = "#T"
							}
							blockoverride "text_desc"
							{
								text = "CRAFTING_GUI_FORGE_DESC" 
								default_format = "#V"
							}
							blockoverride "extra" 
							{
								vbox = {
									visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList('BaseForgeNodes')))]"
									text_single = { text = "POD_CRAFTING_MINIGAME_BASE_FORGE_NODES" }
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									margin_top = 5
									spacing = 5
									
									background = { using = Background_Area_Solid }
									scrollbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										blockoverride "scrollbox_margins" { margin = { 8 4 } }

										blockoverride "scrollbox_content"
										{	
											hbox = {
												layoutpolicy_horizontal = expanding
												fixedgridbox = {
													layoutpolicy_horizontal = expanding
													datamodel = "[GetPlayer.MakeScope.GetList('BaseForgeNodes')]"
													datamodel_wrap = 3
													addcolumn = 180
													addrow = 30
													setitemsizefromcell = yes
													flipdirection = yes
													
													item = {
														crafting_gui_node_button_unclickable = {}
													}
												}
											}
										}
									}
								}
								vbox = {
									visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList('PossibleForgePerkNodes')))]"
									text_single = { text = "POD_CRAFTING_MINIGAME_UNLOCKED_FORGE_NODES" }
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									margin_top = 5
									spacing = 5
									background = { using = Background_Area_Solid }
									scrollbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										blockoverride "scrollbox_margins" { margin = { 8 4 } }

										blockoverride "scrollbox_content"
										{	
											hbox = {
												layoutpolicy_horizontal = expanding
												fixedgridbox = {	
													layoutpolicy_horizontal = expanding
													datamodel = "[GetPlayer.MakeScope.GetList('PossibleForgePerkNodes')]"
													datamodel_wrap = 3
													addcolumn = 180
													addrow = 30
													setitemsizefromcell = yes
													flipdirection = yes
													item = {
														crafting_gui_node_button = {}
													}
												}
											}
										}
									}
								}
								text_single = {
									visible = "[IsDataModelEmpty(GetPlayer.MakeScope.GetList('PossibleForgePerkNodes'))]"
									text = "CRAFTING_GUI_NO_NODES"
									align = center
									margin_bottom = 5
									fontsize_min = 12
								}
								text_single = {
									text = "CRAFTING_GUI_FORGE_COOLDOWN"
									align = center
									margin_bottom = 5
									fontsize_min = 12
								}
								button_group = {
									onclick = "[PlayerGuiExecute('POD_crafting_forge_checkbox')]"
									tooltip = "CRAFTING_GUI_FORGE_COOLDOWN_CHECKBOX_TT"
									using = tooltip_se
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"
									flowcontainer = {
										spacing = 5

										button_checkbox = {
											checked = "[GetPlayer.MakeScope.Var('forge_cooldown_alert').IsSet]"
										}

										text_single = {
											parentanchor = vcenter
											align = nobaseline
											default_format = "#clickable"

											text = "CRAFTING_GUI_FORGE_COOLDOWN_CHECKBOX"
											alwaystransparent = yes
										}
									}
								}
							}
							blockoverride "button"
							{
								enabled = "[GetScriptedGui('POD_create_forge_crafting_minigame').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								hbox = {
									margin = { 16 0 }
									margin_right = 10
									
									text_single = {
										text = "CRAFTING_GUI_START_FORGE"
										align = center
										margin_bottom = 5
										fontsize_min = 12
										default_format = "#clickable"
									}
								}
								onclick = "[GetScriptedGui('POD_create_forge_crafting_minigame').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								tooltip = "[GetScriptedGui('POD_create_forge_crafting_minigame').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('POD_open_crafting_minigame_gui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}
						}
						crafting_gui_core = {
							visible = "[GetVariableSystem.HasValue( 'crafting_gui_tabs', 'brewing' )]"
							blockoverride "background_texture"
							{
								texture = "gfx/interface/illustrations/event_scenes/study_night.dds"
							}
							blockoverride "text_title"
							{
								text = "CRAFTING_GUI_BREWING_TITLE" 
								default_format = "#T"
							}
							blockoverride "text_desc"
							{
								text = "CRAFTING_GUI_BREWING_DESC" 
								default_format = "#V"
							}
							blockoverride "extra" 
							{
								vbox = {
									visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList('BaseBrewNodes')))]"
									text_single = { text = "POD_CRAFTING_MINIGAME_BASE_BREW_NODES" }
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									margin_top = 5
									spacing = 5
									
									background = { using = Background_Area_Solid }
									scrollbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										blockoverride "scrollbox_margins" { margin = { 8 4 } }

										blockoverride "scrollbox_content"
										{	
											hbox = {
												layoutpolicy_horizontal = expanding
												fixedgridbox = {
													layoutpolicy_horizontal = expanding
													datamodel = "[GetPlayer.MakeScope.GetList('BaseBrewNodes')]"
													datamodel_wrap = 3
													addcolumn = 180
													addrow = 30
													setitemsizefromcell = yes
													flipdirection = yes
													
													item = {
														crafting_gui_node_button_unclickable = {}
													}
												}
											}
										}
									}
								}
								vbox = {
									visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList('PossibleBrewPerkNodes')))]"
									text_single = { text = "POD_CRAFTING_MINIGAME_UNLOCKED_BREW_NODES" }
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									margin_top = 5
									spacing = 5
									background = { using = Background_Area_Solid }
									scrollbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										blockoverride "scrollbox_margins" { margin = { 8 4 } }

										blockoverride "scrollbox_content"
										{	
											hbox = {
												layoutpolicy_horizontal = expanding
												fixedgridbox = {	
													layoutpolicy_horizontal = expanding
													datamodel = "[GetPlayer.MakeScope.GetList('PossibleBrewPerkNodes')]"
													datamodel_wrap = 3
													addcolumn = 180
													addrow = 30
													setitemsizefromcell = yes
													flipdirection = yes
													item = {
														crafting_gui_node_button = {}
													}
												}
											}
										}
									}
								}
								text_single = {
									visible = "[IsDataModelEmpty(GetPlayer.MakeScope.GetList('PossibleBrewPerkNodes'))]"
									text = "CRAFTING_GUI_NO_NODES"
									align = center
									margin_bottom = 5
									fontsize_min = 12
								}
								text_single = {
									text = "CRAFTING_GUI_BREWING_COOLDOWN"
									align = center
									margin_bottom = 5
									fontsize_min = 12
								}
								button_group = {
									onclick = "[PlayerGuiExecute('POD_crafting_brew_checkbox')]"
									tooltip = "CRAFTING_GUI_BREW_COOLDOWN_CHECKBOX_TT"
									using = tooltip_se
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"
									flowcontainer = {
										spacing = 5

										button_checkbox = {
											checked = "[GetPlayer.MakeScope.Var('brew_cooldown_alert').IsSet]"
										}

										text_single = {
											parentanchor = vcenter
											align = nobaseline
											default_format = "#clickable"

											text = "CRAFTING_GUI_BREW_COOLDOWN_CHECKBOX"
											alwaystransparent = yes
										}
									}
								}
							}
							blockoverride "button"
							{
								enabled = "[GetScriptedGui('POD_create_brew_crafting_minigame').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								hbox = {
									margin = { 16 0 }
									margin_right = 10
									
									text_single = {
										text = "CRAFTING_GUI_START_BREWING"
										align = center
										margin_bottom = 5
										fontsize_min = 12
										default_format = "#clickable"
									}
								}
								onclick = "[GetScriptedGui('POD_create_brew_crafting_minigame').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								tooltip = "[GetScriptedGui('POD_create_brew_crafting_minigame').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('POD_open_crafting_minigame').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('creating',MakeScopeValue('(CFixedPoint)1')).End)]"
							}
						}
						crafting_gui_core = {
							visible = "[GetVariableSystem.HasValue( 'crafting_gui_tabs', 'enhancing' )]"
							blockoverride "background_texture"
							{
								texture = "gfx/interface/illustrations/event_scenes/throneroom_mediterranean_night.dds"
							}
							blockoverride "text_title"
							{
								text = "CRAFTING_GUI_ENHANCING_TITLE" 
								default_format = "#T"
							}
							blockoverride "text_desc"
							{
								text = "CRAFTING_GUI_ENHANCING_DESC" 
								default_format = "#V"
							}
							blockoverride "extra" 
							{
								vbox = {
									visible = "[Not(IsDataModelEmpty(GetPlayer.MakeScope.GetList('PossibleEnhancePerkNodes')))]"
									text_single = { text = "POD_CRAFTING_MINIGAME_UNLOCKED_ENHANCE_NODES" }
									layoutpolicy_horizontal = expanding
									#layoutpolicy_vertical = expanding
									margin_top = 5
									spacing = 5
									background = { using = Background_Area_Solid }
									scrollbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										blockoverride "scrollbox_margins" { margin = { 8 4 } }

										blockoverride "scrollbox_content"
										{	
											hbox = {
												layoutpolicy_horizontal = expanding
												fixedgridbox = {	
													layoutpolicy_horizontal = expanding
													datamodel = "[GetPlayer.MakeScope.GetList('PossibleEnhancePerkNodes')]"
													datamodel_wrap = 3
													addcolumn = 180
													addrow = 30
													setitemsizefromcell = yes
													flipdirection = yes
													item = {
														crafting_gui_node_button = {}
													}
												}
											}
										}
									}
								}
								text_single = {
									visible = "[IsDataModelEmpty(GetPlayer.MakeScope.GetList('PossibleEnhancePerkNodes'))]"
									text = "CRAFTING_GUI_NO_NODES"
									align = center
									margin_bottom = 5
									fontsize_min = 12
								}
								vbox = {
									layoutpolicy_horizontal = expanding
									layoutpolicy_vertical = expanding
									margin_top = 10
									enabled = "[Not(GetPlayer.MakeScope.Var('crafting_minigame').IsSet)]"
									background = { using = Background_Area_Solid }
									text_label_center = { text = "CRAFTING_GUI_SELECT_ARTIFACT_TARGET" }
									scrollbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										blockoverride "scrollbox_margins" { margin = { 8 4 } }

										blockoverride "scrollbox_content"
										{	
											vbox = {	
												datamodel = "[GetPlayer.GetInventory.GetArtifacts]"
												ignoreinvisible = yes
												spacing = 5
													
												item = {
													widget_crafting_artifact_target = { datacontext = "[Scope.Artifact]" }
												}
											}
											expand = {}
										}
									}
								}
								text_single = {
									text = "CRAFTING_GUI_ENHANCING_COOLDOWN"
									align = center
									margin_bottom = 5
									fontsize_min = 12
								}
								button_group = {
									onclick = "[PlayerGuiExecute('POD_crafting_enhance_checkbox')]"
									tooltip = "CRAFTING_GUI_ENHANCE_COOLDOWN_CHECKBOX_TT"
									using = tooltip_se
									clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_checkbox"
									flowcontainer = {
										spacing = 5

										button_checkbox = {
											checked = "[GetPlayer.MakeScope.Var('enhance_cooldown_alert').IsSet]"
										}

										text_single = {
											parentanchor = vcenter
											align = nobaseline
											default_format = "#clickable"

											text = "CRAFTING_GUI_ENHANCE_COOLDOWN_CHECKBOX"
											alwaystransparent = yes
										}
									}
								}
							}
							blockoverride "button"
							{
								enabled = "[GetScriptedGui('POD_create_enhance_crafting_minigame').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								hbox = {
									margin = { 16 0 }
									margin_right = 10
									
									text_single = {
										text = "CRAFTING_GUI_START_ENHANCING"
										align = center
										margin_bottom = 5
										fontsize_min = 12
										default_format = "#clickable"
									}
								}
								onclick = "[GetScriptedGui('POD_create_enhance_crafting_minigame').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								tooltip = "[GetScriptedGui('POD_create_enhance_crafting_minigame').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
								onclick = "[GetScriptedGui('POD_open_crafting_minigame').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('creating',MakeScopeValue('(CFixedPoint)1')).End)]"
							}
						}
						divider_light = { layoutpolicy_horizontal = expanding }
						vbox = {
							margin_top = 25
							margin_bottom = 25
							visible = "[GetPlayer.MakeScope.Var('crafting_minigame').IsSet]"
							layoutpolicy_horizontal = expanding
							spacing = 10

							text_label_center = {
								text = "CRAFTING_GUI_ONGOING_CRAFTING"
								default_format = "#V"
							}

							button_standard = {
								size = { 500 65 }
								hbox = {
									margin = { 16 0 }
									margin_right = 10
									
									text_single = {
										text = "CRAFTING_GUI_CONTINUE_ONGOING_CRAFTING"
										align = center
										margin_bottom = 5
										fontsize_min = 12
										default_format = "#clickable"
									}
								}
								onclick = "[GetScriptedGui('POD_open_crafting_minigame_gui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							}									
							
						}
					}
				}
			}
		}
	}
}
window = {
	name = "pod_craft_window_side"
	size = { 500 700 }
	parentanchor = center
	visible = "[And(GetVariableSystem.Exists('selecting_crafters'),And(And(GetVariableSystem.HasValue('pod_sidebar', 'craft'), Not(IsRightWindowOpen)), IsSidebarVisibilityValid))]"
	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		using = Window_Position_MainTab

		on_start = "[GetScriptedGui('POD_crafting_creators_search').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
	}
	vbox = {
		using = Window_Background_Subwindow
		layoutpolicy_vertical = expanding
		margin = { 10 10 }
		spacing = 5

		text_single = {
			text = "CRAFTING_GUI_CRAFTERS"
		}
		
		divider_light = {
			layoutpolicy_horizontal = expanding
		}
		
		scrollbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_margins" {
				margin = { 4 4 }
			}

			blockoverride "scrollbox_content"
			{	
				vbox = {	
					datamodel = "[GetPlayer.MakeScope.GetList('possible_crafters')]"
					layoutpolicy_horizontal = expanding
					ignoreinvisible = yes

					spacing = 12
					item = {
						widget_target_character = {}
					}
				}

				expand = {}
			}
		}
	}
}
types CraftingGUI {
	type widget_crafting_artifact_target = widget {
		datacontext = "[Scope.Artifact]"
		datacontext = "[GetIllustration( 'artifact_regional_pattern' )]"
		size = { 560 110 }
		using = tooltip_above

		button_standard = {
			size = { 92% 100% }

			framesize = { 252 80 }
			spriteType = Corneredtiled
			spriteborder = { 10 10 }

			icon =  {
				texture = "[Illustration.GetTexture( Artifact.GetCulture.MakeScope )]"
				spriteType = Corneredtiled
				size = { 100% 15% }
				color = "[Artifact.GetRarityColor]"
				alpha = 0.2
				alwaystransparent = yes
			}

			icon =  {
				texture = "[Illustration.GetTexture( Artifact.GetCulture.MakeScope )]"
				spriteType = Corneredtiled
				size = { 100% 15% }
				color = "[Artifact.GetRarityColor]"
				alpha = 0.2
				alwaystransparent = yes
				parentanchor = bottom
			}

			
			enabled = "[GetScriptedGui( 'POD_crafting_minigame_artifact_target' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('artifact', Artifact.MakeScope).End)]"
			onclick = "[GetScriptedGui( 'POD_crafting_minigame_artifact_target' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('artifact', Artifact.MakeScope).End)]"
			clicksound = "event:/DLC/EP1/SFX/UI/inventory_artifact_place"
			

			block "overlay"
			{
				using = default_character_list_overlay
			}

			block "background_button_overrides"
			{
				down = "[ObjectsEqual( Artifact.Self , GetPlayer.MakeScope.GetVariable('crafting_artifact_target').Artifact )]"
			}

			tooltipwidget = {
				artifact_tooltip = {}
			}

			using = tooltip_es
		}

		flowcontainer = {
			name = "equip_status"
			visible = "[ObjectsEqual( Artifact.Self , GetPlayer.MakeScope.GetVariable('crafting_artifact_target').Artifact )]"
			parentanchor = top|right
			widgetanchor = top|right
			position = { -52 18 }

			allow_outside = yes

			text_single = {
				text = "TARGET_ARTIFACT_WINDOW_CURRENTLY_APPOINTED"
				align = right|nobaseline
				default_format = "#weak"
			}
		}
		flowcontainer = {
			visible = "[Not(GetScriptedGui( 'POD_crafting_minigame_artifact_target' ).IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('artifact', Artifact.MakeScope).End))]"
			parentanchor = top|right
			widgetanchor = top|right
			position = { -65 45 }

			allow_outside = yes
			warning_icon = {
				size = { 45 45 }
				tooltip = "POD_artifact_can_be_enhanced"
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			vbox = {
				name = "icon"
				layoutpolicy_vertical = expanding
				margin = { 2 2 }

				icon_artifact = {
					blockoverride "tooltipwidget" {}
				}
			}

			vbox = {
				name = "text"
				layoutpolicy_vertical = expanding
				margin_top = 4
				margin_bottom = 10

				expand = {}

				text_single = {
					layoutpolicy_horizontal = expanding
					text = "[Artifact.GetRarityAndSlotType]"
					max_width = 300
					using = Font_Size_Small
				}

				text_multi = {
					layoutpolicy_horizontal = expanding
					text = "[Artifact.GetNameNoTooltip]"
					autoresize = yes
					max_width = 350
					using = Font_Size_Medium
					default_format = "#high"
					alwaystransparent = yes
				}

				spacer = {
					size = { 0 6 }
				}

				hbox_artifact_durability = {
					layoutpolicy_horizontal = expanding
					# simple tooltip override so that the durability tooltip doesnt show up here
					tooltip = ""
				}

				expand = {}
			}

			expand = {}
		}
	}
	type widget_target_character = widget {
		datacontext = "[Scope.GetCharacter]"
		size = { 460 110 }
		using = tooltip_above

		button_standard = {
			size = { 98% 100% }

			framesize = { 252 80 }
			spriteType = Corneredtiled
			spriteborder = { 10 10 }

			#portrait_head_small = {}

			block "button_click"
			{
				onclick = "[GetScriptedGui( 'POD_crafting_minigame_crafter_selection' ).Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('crafter', Character.MakeScope).End)]"
				onclick = "[GetScriptedGui('POD_crafting_minigame_node_list').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				clicksound = "event:/DLC/EP1/SFX/UI/inventory_artifact_place"
			}

			block "overlay"
			{
				using = default_character_list_overlay
			}

			block "button_down"
			{
				down = "[ObjectsEqual( Character.Self , GetPlayer.MakeScope.GetVariable('craft_creator').Char )]"
			}

			tooltipwidget = {
				container_character_tooltip = {}
			}

			using = tooltip_es
		}

		flowcontainer = {
			name = "equip_status"
			
			parentanchor = top|right
			widgetanchor = top|right
			position = { -52 18 }

			allow_outside = yes

			text_single = {
				block "visible_status"
				{
					visible = "[ObjectsEqual( Character.Self , GetPlayer.MakeScope.GetVariable('craft_creator').Char )]"
				}
				block "text_status"
				{
					text = "CRAFTING_GUI_CHOOSEN_CRAFTER"
				}
				align = right|nobaseline
				default_format = "#weak"
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			vbox = {
				name = "icon"
				layoutpolicy_vertical = expanding
				margin = { 2 2 }

				portrait_head_small = {
					blockoverride "tooltipwidget" {}
				}
			}
			expand = {}

			vbox = {
				name = "text"
				layoutpolicy_vertical = expanding
				margin_top = 4
				margin_bottom = 10

				expand = {}

				text_multi = {
					layoutpolicy_horizontal = expanding
					text = "[Character.GetNameNoTooltip]"
					autoresize = yes
					max_width = 350
					using = Font_Size_Medium
					default_format = "#high"
					alwaystransparent = yes
				}

				spacer = {
					size = { 0 6 }
				}

				hbox_skills_grid_character_model = {
					layoutpolicy_horizontal = expanding
					# simple tooltip override so that the durability tooltip doesnt show up here
					tooltip = ""
				}

			}
			expand = {}

		}
	}
	type crafting_gui_core = vbox {
		margin_top = 50
		margin_bottom = 50

		layoutpolicy_vertical = expanding
		layoutpolicy_horizontal = expanding

		background = {
			block "background_texture"
			{}
			fittype = centercrop
			alpha = 0.6
			margin_top = 10
			margin_left = 5
			margin_right = 5
			margin_bottom = 5
			modify_texture = {
				texture = "gfx/interface/component_masks/mask_edge_3px.dds"
				spriteType = Corneredtiled
				spriteborder = { 4 4 }
				blend_mode = alphamultiply
			}

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
				blend_mode = alphamultiply
				mirror = vertical
			}
		}	

		spacing = 15

		text_single = { block "text_title" {} }
		text_multi =  {
			max_width = 400
			align = top|hcenter
			fontsize_min = 14
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			block "text_desc" {} 
		}
		
		block "extra" {}
		button_standard = { 
			size = { 400 45 }
			block "button" {} 
			onclick = "[GetVariableSystem.Clear('selecting_crafters')]"
		}
		expand = {}
	}

	
	type crafting_gui_node_button = button_standard_clean {
		layoutpolicy_horizontal = expanding
		text = "[Localize(Concatenate(Scope.GetFlagKey,'_loca'))]"
		#enabled = "[GetScriptedGui('POD_crafting_minigame_node_effect').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('flag', MakeScopeFlag(Scope.GetFlagKey)).End)]"
		tooltip = "[GetScriptedGui('POD_crafting_minigame_node_effect').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('flag', MakeScopeFlag(Scope.GetFlagKey)).End)]"
		onclick = "[GetScriptedGui('POD_crafting_minigame_node_turning_effect').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('flag', MakeScopeFlag(Scope.GetFlagKey)).End)]"
		texture = "gfx/interface/buttons/button_standard.dds"
		modify_texture = {
			visible = "[Not(GetScriptedGui('POD_crafting_minigame_node_turning').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('flag', MakeScopeFlag(Scope.GetFlagKey)).End))]"
			texture = "gfx/interface/component_masks/mask_rough_texture.dds"
			blend_mode = alphamultiply
			spriteType = corneredTiled
			alpha = 0.5
		}
		modify_texture = {
			visible = "[Not(GetScriptedGui('POD_crafting_minigame_node_effect').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('flag', MakeScopeFlag(Scope.GetFlagKey)).End))]"
			texture = "gfx/interface/component_masks/mask_rays.dds"
			blend_mode = alphamultiply
			spriteType = corneredTiled
			alpha = 0.4
		}
	}

	type crafting_gui_node_button_unclickable = button_standard {
		layoutpolicy_horizontal = expanding
		text = "[Localize(Concatenate(Scope.GetFlagKey,'_loca'))]"
		tooltip = "[GetScriptedGui('POD_crafting_minigame_node_effect').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('flag', MakeScopeFlag(Scope.GetFlagKey)).End)]"
		texture = "gfx/interface/buttons/button_standard.dds"
		modify_texture = {
			texture = "gfx/interface/buttons/button_standard_overlay.dds"
			alpha = 0.2
		}
	}
}