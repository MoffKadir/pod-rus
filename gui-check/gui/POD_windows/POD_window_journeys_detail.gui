######################################################
############### JOURNEYS DETAIL VIEW #################
######################################################

window = {
	name = "journeydetail_view"
	parentanchor = center
	size = { 630 935 }
	layer = middle

	using = Window_Movable
	using = Window_Background
	using = Window_Decoration_Spike
	
	visible = "[GetPlayer.MakeScope.Var('journey_detail_window').IsSet]"

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
		position = "[DecisionDetailView.GetDynamicPosition]"
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		#using = Sound_WindowHide_Standard
	}

	vbox = {
		using = Window_Margins

		state = {
			name = "journey_detail_refresh"
			alpha = 0.5
			duration = 0.2
			next = "b"
			using = Animation_Curve_Default
		}

		state = {
			name = "b"
			alpha = 1
			duration = 0.2
			using = Animation_Curve_Default
		}

		header_pattern = {
			layoutpolicy_horizontal = expanding
			datacontext = "[GetPlayer.MakeScope.Var('journey_detail_window')]"

			blockoverride "header_text"
			{
				text = "[Select_CString( GetPlayer.MakeScope.Var('journey_detail_window_subtype').IsSet, Localize(Concatenate(GetPlayer.MakeScope.Var('journey_detail_window_subtype').Var('journey_type').GetFlagKey,'_name')), Localize(Concatenate(ScopedJourneyID,'_name')) )]"
			}

			blockoverride "button_close"
			{
				onclick = "[PlayerGuiExecute('POD_journey_detail_close')]"
			}
		}

		journey_detail_view_overview = {}

		journey_detail_view_widget = {}
	}
}


types JourneyDetailViewTypes
{
	type journey_detail_view_overview = vbox
	{
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		visible = "[GetPlayer.MakeScope.Var('journey_detail_window_subtype').IsSet]"
		
		datacontext = "[GetPlayer.MakeScope.Var('journey_detail_window_subtype')]"

		vbox = {
			layoutpolicy_horizontal = expanding
			minimumsize = { 550 220 }
			
			background = {
				name = "illustrations"
				texture = "[GetCultureInnovationType(Concatenate(ScopedJourneyID,'_illustration')).GetIcon]"
				margin_top = 10
				alpha = 0.7
				using = Mask_Rough_Edges
			}
		}

		text_multi = {
			name = "description"
			minimumsize = { 515 -1 }
			maximumsize = { 515 -1 }
			margin = { 15 15 }
			autoresize = yes
			text = "[Localize(Concatenate(ScopedJourneyID,'_desc'))]"
			using = Font_Size_Small
		}

		scrollbox = {
			name = "description_scrollarea"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			blockoverride "scrollbox_content"
			{
				vbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 10

					vbox = {
						name = "effect"
						visible = "[Not(PlayerGuiIsShown('POD_hunt_in_capital_selection_sgui'))]"
						layoutpolicy_horizontal = expanding
					
						background = {
							name = "illustrations"
							texture = "gfx/interface/icons/lifestyle_tree_backgrounds/skulduggery.dds"
							tintcolor = { 0.6 0.8 0.8 0.8 }

							margin = { 0 5 }
							using = Mask_Rough_Edges
							alpha = 0.8
							fittype = centercrop
							mirror = horizontal

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_fade_corners_bottom.dds"
								blend_mode = alphamultiply
								alpha = 0.6
							}

							modify_texture = {
								texture = "gfx/interface/component_masks/mask_rough_edges.dds"
								blend_mode = overlay
								alpha = 0.4
							}
						}

						text_label_center = {
							text = "JOURNEY_DETAIL_EFFECTS"
						}

						text_multi = {
							layoutpolicy_horizontal = expanding
							margin = { 15 15 }
							max_width = 515
							autoresize = yes
							text = "[Localize(Concatenate(ScopedJourneyID,'_effects'))]"
						}
					}

					vbox = {
						name = "requirements"
						visible = "[Not( PlayerGuiIsValid( Concatenate(ScopedJourneyID,'_requirements') ) )]"
						layoutpolicy_horizontal = expanding

						text_label_center = {
							text = "JOURNEY_DETAIL_REQUIREMENTS"
						}

						text_multi = {
							alwaystransparent = no
							minimumsize = { 515 -1 }
							maximumsize = { 515 -1 }
							margin = { 15 15 }
							autoresize = yes
							text = "[Localize(Concatenate(ScopedJourneyID,'_isvalid'))]"
						}
					}
				
					journey_detail_view_hunt_options = {}

					expand = {}

				}
			}

			blockoverride "scrollbox_background_fade" {}
		}

		vbox = {
			name = "footer"
			layoutpolicy_horizontal = expanding

			vbox = {
				layoutpolicy_horizontal = expanding
				margin_top = 4
				margin_bottom = 10
				spacing = 5

				spacer = {
					size = { 0 2 }
				}
				
				text_single = {
					name = "cost"
					visible = "[Not(PlayerGuiIsShown('POD_hunt_in_capital_selection_sgui'))]"
					text = "[GetPlayer.Custom('PODShowJourneyCost')]"
					using = Font_Size_Medium
					default_format = "#high"
					align = nobaseline
				}
				text_single = {
					name = "cost_hunt"
					visible = "[PlayerGuiIsShown('POD_hunt_in_capital_selection_sgui')]"
					text = "[GetPlayer.Custom('PODShowJourneyCostHunt')]"
					using = Font_Size_Medium
					default_format = "#high"
					align = nobaseline
				}
				text_single = {
					name = "progress"
					text = "[GetPlayer.Custom('PODShowJourneyProgress')]"
					using = Font_Size_Medium
					default_format = "#high"
					align = nobaseline
				}

				spacer = {
					size = { 10 2 }
				}

				hbox = {
					spacing = 10

					button_standard_back = {
						name = "back"
						size = { 120 50 }
						visible = "[GetPlayer.MakeScope.Var('journey_detail_window_widget').IsSet]"
						onclick = "[PlayerGuiExecute('POD_journey_detail_go_back')]"
						text = "BACK_LABEL"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"
					}
					
					button_primary = {
						name = "confirm"
						size = { 380 50 }

						enabled = "[And( PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') )]"
						
						tooltip = "[Concatenate( AddTextIf( Not(PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements'))), Concatenate( PlayerGuiIsValidTooltip(Concatenate(ScopedJourneyID,'_requirements')), DoubleLinebreak ) ), AddTextIf( Not(StoryGuiIsValid('POD_journey_requirements')), StoryGuiIsValidTooltip('POD_journey_requirements') ) )]"
						
						onclick = "[StoryGuiExecute('POD_journey_on_start')]"

						text = "[Localize( Concatenate(ScopedJourneyID,'_tt') )]"

						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_start_game"
					}
				}

				spacer = {
					size = { 0 2 }
				}

				expand = {}
			}
		}
	}

	type journey_detail_view_widget = vbox
	{
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		visible = "[Not(GetPlayer.MakeScope.Var('journey_detail_window_subtype').IsSet)]"

		vbox = {
			layoutpolicy_horizontal = expanding
			minimumsize = { 550 220 }
			
			datacontext = "[GetPlayer.MakeScope.Var('journey_detail_window')]"
			
			background = {
				name = "illustrations"
				texture = "[GetCultureInnovationType(Concatenate(ScopedJourneyID,'_illustration')).GetIcon]"
				margin_top = 10
				alpha = 0.7
				using = Mask_Rough_Edges
			}
		}

		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			ignoreinvisible = yes
			margin_top = 10
			spacing = 10
			
			text_label_center = {
				text = "[Localize( Concatenate( GetPlayer.MakeScope.Var('journey_detail_window').Var('journey_type').GetFlagKey, '_desc' ) )]"
			}
			
			hbox = {
				name = "custom_widgets_container_journeys"
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding		

				scrollbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_content" {
						vbox = {
							datamodel = "[GetGlobalList( Concatenate( GetPlayer.MakeScope.Var('journey_detail_window_widget').GetFlagKey, '_GUI_list' ) ) ]"
							spacing = 8

							item = {
								button_journey_entry = {
									layoutpolicy_horizontal = expanding
									size = { 500 65 }
									margin = { 10 10 }

									onclick = "[StoryGuiExecute('POD_journey_detail_select_subtype')]"
									
									visible = "[And( PlayerGuiIsShown(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsShown('POD_journey_requirements') )]"
									
									#enabled = "[And( PlayerGuiIsValid(Concatenate(ScopedJourneyID,'_requirements')), StoryGuiIsValid('POD_journey_requirements') )]"
									
									tooltip = "POD_journey_GUI_tooltip"
								}
							}
						}
					}

					#blockoverride "scrollbox_background_fade" {}
				}
			}
		}
	}
	
	type journey_detail_view_hunt_options = vbox
	{
		name = "hunt_options"
		visible = "[PlayerGuiIsShown('POD_hunt_in_capital_selection_sgui')]"
		spacing = 4
		layoutpolicy_horizontal = expanding

		text_label_center = {
			layoutpolicy_horizontal = expanding
			text = "POD_find_mortals_interaction_options_heading"
			align = center|nobaseline
		}
		
		vbox = {
			layoutpolicy_horizontal = expanding
			datamodel = "[GetPlayer.MakeScope.GetList('hunt_in_capital_types')]"
			
			item = {
				journey_detail_view_hunt_item = {}
			}
		}
	}
	
	type journey_detail_view_hunt_item = button_standard_hover
	{
		layoutpolicy_horizontal = expanding
		size = { 480 40 }

		background = {
			using = Background_Area_Border
		}
		
		onclick = "[GetScriptedGui('POD_hunt_in_capital_selection_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('selection',MakeScopeFlag(Scope.GetFlagKey)).End)]"
		
		hbox = {
			margin = { 16 0 }
			spacing = 8

			tooltip = "[Localize(Concatenate( 'POD_find_mortals_interaction_tt_', Scope.GetFlagKey ))]"
			using = tooltip_below
			
			button_radio = {
				size = { 25 25 }
				onclick = "[GetScriptedGui('POD_hunt_in_capital_selection_sgui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('selection',MakeScopeFlag(Scope.GetFlagKey)).End)]"
				frame   = "[BoolTo1And2( EqualTo_string( Scope.GetFlagKey, GetPlayer.MakeScope.Var('hunt_in_capital_selection').GetFlagKey ) )]"
			}

			text_single = {
				layoutpolicy_horizontal = expanding
				text = "[Localize(Concatenate( 'POD_find_mortals_interaction_', Scope.GetFlagKey ))]"
				align = nobaseline
			}
		}
	}
}
