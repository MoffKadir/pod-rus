widget = {
	name = "pod_crafting_minigame_window"
	visible = "[And(And(Not(IsPauseMenuShown), IsDefaultGUIMode), GetPlayer.IsValid)]"
	layer = royal_court
	size = { 100% 100% }

	window = {
		parentanchor = center
		size = { 890 890 }
		using = Window_Background
		using = Window_Decoration
		allow_outside = yes

		# Using a character variable for now (so it can be set via character interaction) 
		visible = "[And(GetPlayer.MakeScope.Var('POD_open_crafting_minigame').IsSet, GetPlayer.MakeScope.Var('crafting_minigame').IsSet)]"
		#visible = "[And(GetVariableSystem.Exists('pod_crafting_minigame_view'), GetPlayer.MakeScope.Var('crafting_minigame').IsSet)]"

		vbox = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding

                        using = Window_Margins
                        
                        allow_outside = yes

                        header_pattern = {
                                layoutpolicy_horizontal = expanding

                                blockoverride "header_text"
                                {
                                        text = "POD_CRAFTING_MINIGAME_TITLE"
                                }

                                blockoverride "button_close"
                                {
                                        onclick = "[GetScriptedGui('POD_close_crafting_minigame_gui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                                }
                        }
                        hbox = {
                                text_single = {
                                        text = "POD_CRAFTING_MINIGAME_MOVES_LEFT"
                                        default_format = "#bold;SIZE:18"
                                }
                                text_single = {
                                        margin_left = 5
                                        raw_text = "#color:{[PODValueRed(GetPlayer.MakeScope.ScriptValue('crafting_minigame_moves'),'(CFixedPoint)12.0')],[PODValueGreen(GetPlayer.MakeScope.ScriptValue('crafting_minigame_moves'),'(CFixedPoint)12.0')],0,1} [GetPlayer.MakeScope.ScriptValue('crafting_minigame_moves')]#!"
                                        tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('crafting_minigame_moves')]"
                                        default_format = "#bold;P;SIZE:18;underline"
                                }
                                margin_bottom = 10
                        }
                        vbox = {
                                layoutpolicy_horizontal = expanding
                                layoutpolicy_vertical = expanding
				
				widget = {	
					background = {
						texture = "gfx/interface/illustrations/event_scenes/armory_night.dds"
						fittype = centercrop
						alpha = 0.6
						margin_top = 10
						margin_left = 5
						margin_right = 5
						margin_bottom = 5
						modify_texture = {
							texture = "gfx/interface/component_masks/mask_edge_3px.dds"
							spriteType = Corneredtiled
							spriteborder = { 4 4 }
							blend_mode = alphamultiply
						}

						modify_texture = {
							texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
							blend_mode = alphamultiply
							mirror = vertical
						}
					}			
					background = {
						using = Background_Frame
						block "bordercolor" { color = { 0.2 0.7 0.6 0.9 } }
						margin = { 18 18 }
					}
					background = {
						using = Background_Frame
						block "bordercolor" { color = { 0.2 0.7 0.6 0.9 } }
						alpha = 0.5
						margin = { 12 12 }
					}
		
					min_width = "[GetPlayer.MakeScope.Var('crafting_minigame').Var('width').GetValue]"
					max_width = "[GetPlayer.MakeScope.Var('crafting_minigame').Var('width').GetValue]"
					min_height = "[GetPlayer.MakeScope.Var('crafting_minigame').Var('height').GetValue]"
					max_height = "[GetPlayer.MakeScope.Var('crafting_minigame').Var('height').GetValue]"
					widget = {
						name = "pod_crafting_lines"
						size = { 100% 100% }
						alwaystransparent = yes
						datamodel = "[GetPlayer.MakeScope.Var('crafting_minigame').Var('node_map').GetList('lines')]"
						item = {
							pod_crafting_line = {}
						}
					}
					widget = {
						name = "pod_crafting_nodes"
						size = { 100% 100% }
						alwaystransparent = yes
						datamodel = "[GetPlayer.MakeScope.Var('crafting_minigame').Var('node_map').GetList('nodes')]"
						item = {
							pod_crafting_node = {}
						}
					}
					widget = {
						name = "pod_crafting_grid_lines"
						visible = "[GetVariableSystem.Exists('pod_crafting_minigame_show_grid')]"
						size = { 100% 100% }
						alwaystransparent = yes
						datamodel = "[GetPlayer.MakeScope.Var('crafting_minigame').Var('node_map').GetList('grid_lines')]"
						item = {
							pod_crafting_grid_line = {}
						}
					}
				}
				hbox = {
					margin_right = 45
					background = {
						using = Background_Area
					}
					layoutpolicy_horizontal = expanding
					expand = {}
					hbox = {
						datacontext = "[GetPlayer.MakeScope.GetVariable('crafting_minigame').GetVariable('crafter').GetCharacter]"
						portrait_shoulders = {}
					}
					expand = {}
					vbox = {
						text_single = {
							text = "POD_CRAFTING_MINIGAME_MODIFIERS_TITLE"
							default_format = "#T"
						}
                                                spacer = { size = { 0 10 } }
                                                scrollbox = {
                                                        min_width = 400
                                                        layoutpolicy_horizontal = expanding
                                                        layoutpolicy_vertical = expanding

                                                        blockoverride "scrollbox_background" {}
                                                        blockoverride "scrollbox_background_fade" {}

                                                        blockoverride "scrollbox_content"
                                                        {	
                                                                margin_top = 15
                                                                text_single = {
                                                                        datacontext = "[GetPlayer.MakeScope.GetVariable('crafting_minigame').GetVariable('dummy_artifact').Artifact]"
                                                                        raw_text = "[Artifact.GetModifierEffects]"
                                                                }

                                                                text_multi = {
                                                                        visible = "[GetScriptedGui('POD_crafting_brewing_effects_show').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope.GetVariable('crafting_minigame').GetVariable('dummy_artifact').Artifact.MakeScope).AddScope('character', GetPlayer.MakeScope).End)]"
                                                                        max_width = 300
                                                                        autoresize = yes

                                                                        text = "[GetScriptedGui('POD_crafting_brewing_effects_show').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope.GetVariable('crafting_minigame').GetVariable('dummy_artifact').Artifact.MakeScope).AddScope('character', GetPlayer.MakeScope).End)]"
                                                                }
                                                        }
                                                }
					}					
					expand = {}
				}
				widget = {
					allow_outside = yes
					vbox = {
						parentanchor = bottom|hcenter
						position = { 270 10 }
						text_single = {
							text = "POD_CRAFTING_MINIGAME_RELOADS"
						}
						text_single = {
							text = "[GetPlayer.MakeScope.ScriptValue('crafting_minigame_reloads')]"
							tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('crafting_minigame_reloads')]"
							default_format = "#T;underline"
						}
					}
					button_redo = {
						position = { 690 -10 }
						size = { 24 24 }
						onclick = "[PlayerGuiExecute('POD_crafting_minigame_reroll')]"
						enabled = "[GetScriptedGui('POD_crafting_minigame_reroll').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						tooltip = "[GetScriptedGui('POD_crafting_minigame_reroll').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('tooltip', MakeScopeValue('(CFixedPoint)1')).End)]"
					}
					button_primary_big = {
						parentanchor = bottom|hcenter
						position = { 0 10 }
						text = "POD_CRAFTING_MINIGAME_CRAFT"
						#clicksound = "event:/SFX/UI/Unique/CharacterLifestyle/sfx_ui_unique_lifestyle_learning"
						
						onclick = "[GetScriptedGui('POD_crafting_minigame_end').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						enabled = "[GetScriptedGui('POD_crafting_minigame_end').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						tooltip = "[GetScriptedGui('POD_crafting_minigame_end').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					}
                    # text_single = {
					# 	parentanchor = bottom|hcenter
					# 	position = { -270 0 }
                    #     text = "POD_CRAFTING_MINIGAME_POTENTIAL"
                    # }
					vbox = {
						parentanchor = bottom|hcenter
						position = { -270 10 }
						text_single = {
							text = "POD_CRAFTING_MINIGAME_POTENTIAL"
						}
						text_single = {
							text = "[GetPlayer.MakeScope.ScriptValue('crafting_minigame_size')]"
							tooltip = "[GetPlayer.MakeScope.GetScriptValueDesc('crafting_minigame_size')]"
							default_format = "#T;underline"
						}
					}
				}
                        }
		}
		window = {
			parentanchor = center
			size = { 550 700 }
			using = Window_Background
			using = Window_Decoration
			allow_outside = yes

			state = {
				name = _show
				using = Animation_FadeIn_Quick
				using = Sound_WindowShow_Standard
				using = Window_Position_MainTab

				on_start = "[GetScriptedGui('POD_crafting_minigame_sacrifice_gui').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			

			visible = "[And(GetPlayer.MakeScope.Var('crafting_minigame').Var('open_sacrifice_gui').IsSet, GetPlayer.MakeScope.Var('crafting_minigame').IsSet)]"
			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				
                using = Window_Margins
				margin_bottom = 30

				header_pattern = {
					layoutpolicy_horizontal = expanding

					blockoverride "header_text"
					{
						text = "POD_CRAFTING_MINIGAME_SACRIFICE_TITLE"
					}

					blockoverride "button_close"
					{
						onclick = "[GetScriptedGui('POD_crafting_minigame_sacrifice_gui_close').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					}
				}
				scrollbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding

					blockoverride "scrollbox_margins" {
						margin = { 1 1 }
					}
					blockoverride "scrollbox_content"
					{	
						vbox = {	
							datamodel = "[GetPlayer.MakeScope.GetList('possible_sacrifice')]"
							layoutpolicy_horizontal = expanding
							ignoreinvisible = yes

							spacing = 12
							item = {
								widget_target_character = {
									blockoverride "button_click" {
										onclick = "[GetScriptedGui('POD_crafting_minigame_sacrifice_gui_select').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('sacrifice', Character.MakeScope).End)]"
										clicksound = "event:/DLC/EP1/SFX/UI/inventory_artifact_place"
									}
									blockoverride "button_down"
									{
										down = "[ObjectsEqual( Character.Self , GetPlayer.MakeScope.GetVariable('crafting_minigame').GetVariable('sacrifice').Char )]"
									}
									blockoverride "visible_status"
									{
										visible = "[ObjectsEqual( Character.Self , GetPlayer.MakeScope.Var('crafting_minigame').Var('sacrifice').Char )]"
									}
									blockoverride "text_status"
									{
										text = "CRAFTING_GUI_CHOOSEN_SACRIFICE"
									}
								}
							}
						}

						expand = {}
					}
				}
				spacer = { size = { 0 10 } }
				button_standard = {
					size = { 425 45 }
					hbox = {
						margin = { 16 0 }
						margin_right = 10
						
						text_single = {
							text = "CRAFTING_GUI_EXECUTE_SACRIFICE_GUI"
							align = center
							margin_bottom = 5
							fontsize_min = 12
							default_format = "#clickable"
						}
					}
                                        enabled = "[GetScriptedGui('POD_crafting_minigame_sacrifice_gui_execute').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					onclick = "[GetScriptedGui('POD_crafting_minigame_sacrifice_gui_execute').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					tooltip = "[GetScriptedGui('POD_crafting_minigame_sacrifice_gui_execute').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				}	
			}
		}
	}
}

types CraftingMiniGameTypes
{
	type pod_crafting_node = widget
	{
		allow_outside = yes
		state = {
			name = _mouse_hierarchy_enter
			on_start = "[StoryGuiExecute('POD_crafting_minigame_node_hover_enter')]"
		}
		state = {
			name = _mouse_hierarchy_leave
			on_start = "[StoryGuiExecute('POD_crafting_minigame_node_hover_leave')]"
		}
		button_normal = {

			size = { 50 50 }
			# Scale down positions by the scaling vector
			# Widgets scale up automatically so we need to apply the scaling vector here to ensure that the position of the icon is appropriately adjusted
			position = "[Subtract_CVector2f( Multiply_CVector2f(GetScalingVector, PdxGetWidgetScreenSize(PdxGuiWidget.FindChild('positioning_helper').Self)), '(CVector2f)25,25' )]"

			enabled = "[And(Not(IsPausedByEvent), StoryGuiIsValid('POD_crafting_minigame_node'))]"

			onclick = "[StoryGuiExecute('POD_crafting_minigame_node')]"

			tooltip = "[StoryGuiBuildTooltip('POD_crafting_minigame_node')]"

			using = POD_scaling_helper

			# Please give us a better way to create CVector2f Paradox
			widget = {
				name = "positioning_helper"
				min_width = "[ScopedNodeX]"
				max_width = "[ScopedNodeX]"
				min_height = "[ScopedNodeY]"
				max_height = "[ScopedNodeY]"
			}

			button_icon = {
				texture = "gfx/interface/buttons/button_activity_base.dds"
				size = { 50 50 }

				visible = "[StoryGuiIsShown('POD_crafting_minigame_node')]"
			}

			highlight_icon = {
				texture = "gfx/interface/buttons/button_activity_base.dds"
				size = { 50 50 }

				visible = "[Not(StoryGuiIsShown('POD_crafting_minigame_node'))]"
			}

			highlight_icon = {
				texture = "[GetCultureInnovationType(Concatenate('crafting_minigame_', Scope.Var('node_type').GetFlagName)).GetIcon]"
				size = { 50 50 }
			}
		}
	}
	type pod_crafting_line = widget
	{
		alpha = "[Scope.Var('opacity').GetValue]"
		size = { 100% 100% }
		line = {
			using = Line_Lifestyles_Unlocked
			width = 8
			color = { 0 0 0 1 }
			scale = "[GetInvParentScale(PdxGuiWidget.Self)]"
			from  = "[PdxGetWidgetScreenSize(PdxGuiWidget.AccessParent.FindChild('pod_line_start').Self)]"
			to    = "[PdxGetWidgetScreenSize(PdxGuiWidget.AccessParent.FindChild('pod_line_end').Self)]"
		}
		line = {
			using = Line_Lifestyles_Unlocked
			width = 5
			scale = "[GetInvParentScale(PdxGuiWidget.Self)]"
			from  = "[PdxGetWidgetScreenSize(PdxGuiWidget.AccessParent.FindChild('pod_line_start').Self)]"
			to    = "[PdxGetWidgetScreenSize(PdxGuiWidget.AccessParent.FindChild('pod_line_end').Self)]"
		}
		widget = {
			name = "pod_line_start"
			min_width = "[ScopedLineX1]"
			max_width = "[ScopedLineX1]"
			min_height = "[ScopedLineY1]"
			max_height = "[ScopedLineY1]"
		}
		widget = {
			name = "pod_line_end"
			min_width = "[ScopedLineX2]"
			max_width = "[ScopedLineX2]"
			min_height = "[ScopedLineY2]"
			max_height = "[ScopedLineY2]"
		}
	}
	type pod_crafting_grid_line = widget
	{
		size = { 100% 100% }
		line = {
			using = MiddleLine
			width = 2
			scale = "[GetInvParentScale(PdxGuiWidget.Self)]"
			from  = "[PdxGetWidgetScreenSize(PdxGuiWidget.AccessParent.FindChild('pod_line_start').Self)]"
			to    = "[PdxGetWidgetScreenSize(PdxGuiWidget.AccessParent.FindChild('pod_line_end').Self)]"
		}
		widget = {
			name = "pod_line_start"
			min_width = "[FixedPointToInt(Scope.Var('start_x').GetValue)]"
			max_width = "[FixedPointToInt(Scope.Var('start_x').GetValue)]"
			min_height = "[FixedPointToInt(Scope.Var('start_y').GetValue)]"
			max_height = "[FixedPointToInt(Scope.Var('start_y').GetValue)]"
		}
		widget = {
			name = "pod_line_end"
			min_width = "[FixedPointToInt(Scope.Var('end_x').GetValue)]"
			max_width = "[FixedPointToInt(Scope.Var('end_x').GetValue)]"
			min_height = "[FixedPointToInt(Scope.Var('end_y').GetValue)]"
			max_height = "[FixedPointToInt(Scope.Var('end_y').GetValue)]"
		}
	}
}
