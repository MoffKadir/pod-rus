@sidebar_button_width = 194
@invisible_color = "#color:{0.0,0.0,0.0,0.0}"

types POD_window_character {
	type POD_window_character_minions_tab_button = button_tab {
		name = "minions_button"
		datacontext = "[CharacterWindow.GetCharacter]"
		layoutpolicy_horizontal = expanding

		onclick = "[CharacterWindow.SetTab('relations')]" 
		onclick = "[GetVariableSystem.Set('character_tab_pod', 'minions')]"
		down = "[And(CharacterWindow.IsTabShown('relations'), GetVariableSystem.HasValue( 'character_tab_pod', 'minions' ))]"
		visible = "[GetScriptedGui('should_see_minions_gui').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
		using = tooltip_above

		hbox = {
			text_single = {
				layoutpolicy_horizontal = expanding
				align = center
				raw_text = minions_button_name
				default_format = "#low"
				visible = "[Not(GetScriptedGui('is_werewolf_owner').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End ))]"
			}
			
			text_single = {
				layoutpolicy_horizontal = expanding
				align = center
				raw_text = minions_button_name_werewolf
				default_format = "#low"
				visible = "[GetScriptedGui('is_werewolf_owner').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
			}
		}
	}
	type POD_window_character_cultists_tab_button = button_tab {
		name = "cultists_button"
		datacontext = "[CharacterWindow.GetCharacter]"
		layoutpolicy_horizontal = expanding

		onclick = "[CharacterWindow.SetTab('relations')]"
		onclick = "[GetVariableSystem.Set('character_tab_pod', 'cultists')]"
		down = "[And(CharacterWindow.IsTabShown('relations'), GetVariableSystem.HasValue( 'character_tab_pod', 'cultists' ))]"
		visible = "[GetScriptedGui('should_see_cultists_gui').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
		using = tooltip_above

		hbox = {
			text_single = {
				layoutpolicy_horizontal = expanding
				align = center
				raw_text = cultists_button_name
				default_format = "#low"
			}
		}
	}
	type POD_window_character_neterus_tab_button = button_tab {
		name = "neterus_button"
		datacontext = "[CharacterWindow.GetCharacter]"
		layoutpolicy_horizontal = expanding

		onclick = "[CharacterWindow.SetTab('relations')]"
		onclick = "[GetVariableSystem.Set('character_tab_pod', 'neterus')]"
		down = "[And(CharacterWindow.IsTabShown('relations'), GetVariableSystem.HasValue( 'character_tab_pod', 'neterus' ))]"
		visible = "[GetScriptedGui('should_see_neterus_gui').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
		using = tooltip_above

		hbox = {
			text_single = {
				layoutpolicy_horizontal = expanding
				align = center
				raw_text = neterus_button_name
				default_format = "#low"
			}
		}
	}
	type POD_window_character_minions_tab = widget {
		name = "minions"
		visible = "[And(CharacterWindow.IsTabShown('relations'), GetVariableSystem.HasValue( 'character_tab_pod', 'minions' ))]"
		size = { 100% 100% }
	
		using = Animation_Tab_Switch
	
		scrollbox = { # View When none of the relation tabs are expanded.
			name = "minons_main_view"
			visible = "[Not(CharacterWindow.IsRelationExpanded( 'ghouls' ))]"
			size = { 605 100% }
			position = { -15 -5 }
			blockoverride "scrollbox_content" {
				
				widget = {
					visible = "[GetScriptedGui('POD_has_coterie_sgui').IsValid( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "coterie"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
	
					hbox = {
						vbox_coterie_row_item = { }
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_fetter_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "fetter"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "fetter"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'fetter' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = fetter_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'fetter' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'fetter' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'fetter' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'fetter' )]"
							}
						}								
	
						expand = {}
					}
				}
	
				widget = {
					visible = "[GetScriptedGui('has_ghouls_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "ghouls"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
	
					hbox = {
						vbox_character_row_item = {
							name = "ghouls"
							datacontext = "[CharacterWindow.GetCharacter]"
							visible = "[GetScriptedGui('is_vampire_g').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfTypeFillEmpty( GetRelation( 'ghoul_thrall' ), '(int32)1' )]"
							}
	
							blockoverride "header_text"
							{
								text = ghouls_row_header
							}
							
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'ghoul_thrall' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'ghouls' )]"
							}
						}
						expand = {}
					}
				}
	
				widget = {
					visible = "[GetScriptedGui('has_herd_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "herd"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "herd"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'herd_member' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = herd_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'herd_member' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'herd_member' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'herd_member' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'herd' )]"
							}
						}								
	
						expand = {}
					}
				}
	
				widget = {
					visible = "[GetScriptedGui('has_dreamer_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "dreamer"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "dreamer"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'dreamer_member' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = dreamer_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'dreamer_member' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'dreamer_member' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'dreamer_member' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'dreamer' )]"
							}
						}								
	
						expand = {}
					}
				}
	
				widget = {
					visible = "[GetScriptedGui('has_thrall_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "thrall"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "thrall"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'demonic_thrall' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = thrall_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'demonic_thrall' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'demonic_thrall' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'demonic_thrall' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'thrall' )]"
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_wraiths_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "bound_wraiths"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "bound_wraiths"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'bound_wraith' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = bound_wraiths_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'bound_wraith' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'bound_wraith' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'bound_wraith' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'bound_wraiths' )]"
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_demons_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "bound_demons"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "bound_demons"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'bound_demon' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = bound_demons_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'bound_demon' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'bound_demon' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'bound_demon' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'bound_demons' )]"
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('knows_true_names_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "known_true_names"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "known_true_names"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'known_true_name' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = known_true_names_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'known_true_name' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'known_true_name' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'known_true_name' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'known_true_names' )]"
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_spirits_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "spirit_companion"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "spirit_companions"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'spirit_companion' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = spirit_companions_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_possesses_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "possessed_targets"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "possessed_targets"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'possessed_target' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = possessed_targets_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_dominates_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "dominate_targets"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "dominate_targets"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'dominate_target' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = dominate_targets_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_fascinates_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "fascinate_targets"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "fascinate_targets"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'fascinate_target' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = fascinate_targets_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_stolen_hearts_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "stolen_hearts"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "stolen_hearts"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'heart_of_darkness_heartless' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = stolen_hearts_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'heart_of_darkness_heartless' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'heart_of_darkness_heartless' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'heart_of_darkness_heartless' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'stolen_hearts' )]"
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_shadow_twin_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "shadow_twin"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "shadow_twin"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'shadow_twin_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = shadow_twin_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_mirror_duplicate_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "mirror_duplicate"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "mirror_duplicate"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'mirror_duplicate_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = mirror_duplicate_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_darkling_mirror_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "darkling_mirror"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "darkling_mirror"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'darkling_mirror_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = darkling_mirror_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_shadowy_duplicate_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "shadowy_duplicate"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "shadowy_duplicate"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'shadowy_duplicate_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = shadowy_duplicate_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_phantom_shadow_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "phantom_shadow"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "phantom_shadow"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'phantom_shadow_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = phantom_shadow_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_separated_khaibit_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "separated_khaibit"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "separated_khaibit"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'separated_khaibit_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = separated_khaibit_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_separated_shadow_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "separated_shadow"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "separated_shadow"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'separated_shadow_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = separated_shadow_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_unspeakable_servitor_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "unspeakable_servitor"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "unspeakable_servitor"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'unspeakable_servitor_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = unspeakable_servitor_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_shadow_self_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "shadow_self"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "shadow_self"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'shadow_self_servant' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = shadow_self_row_header
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_effigies_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "effigies"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "effigies"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'effigy_character' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = effigies_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'effigy_character' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'effigy_character' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'effigy_character' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'effigies' )]"
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_animantis_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "animantis"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "animantis"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'animantis_character' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = animantis_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'animantis_character' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'animantis_character' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'animantis_character' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'animantis' )]"
							}
						}								
	
						expand = {}
					}
				}
				
				widget = {
					visible = "[GetScriptedGui('has_manifestation_gui').IsShown( GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End )]"
					name = "manifestation"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					size = { 0 110 }
					scissor = yes
					hbox = {
						vbox_character_row_item = {
							name = "manifestation"
							layoutpolicy_vertical = expanding
	
							blockoverride "portrait_datamodel" {
								datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'manifestation_character' ) )]"
							}
							
							blockoverride "header_text"
							{
								text = manifestation_row_header
							}
	
							blockoverride "remaining_items"
							{
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'manifestation_character' ) )), '(int32)7' )]"
								text = "[GetNumberAbove_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'manifestation_character' ) )), '(int32)7' )|=]"
							}
	
							blockoverride "expand_button_inside" {
								visible = "[GreaterThan_int32( GetDataModelSize(CharacterWindow.GetRelationsOfType( GetRelation( 'manifestation_character' ) )), '(int32)0' )]"
								onclick = "[CharacterWindow.ToggleExpandedRelation( 'manifestation' )]"
							}
						}								
	
						expand = {}
					}
				}
			}
		}
		### GHOULS EXPANDED
		scrollbox = {
			name = "ghouls_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'ghouls' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "ghouls"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'ghoul_thrall' ) )]"
					}
	
					blockoverride "header_text"
					{
						text = ghouls_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'ghouls' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'ghouls' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### HERD EXPANDED
		scrollbox = {
			name = "herd_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'herd' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "herd"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'herd_member' ) )]"
					}
	
					blockoverride "header_text"
					{
						text = herd_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'herd' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'herd' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### DREAMER EXPANDED
		scrollbox = {
			name = "dreamer_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'dreamer' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "dreamer"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'dreamer_member' ) )]"
					}
	
					blockoverride "header_text"
					{
						text = dreamer_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'dreamer' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'dreamer' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### THRALL EXPANDED
		scrollbox = {
			name = "thrall_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'thrall' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "thrall"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'demonic_thrall' ) )]"
					}
	
					blockoverride "header_text"
					{
						text = thrall_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'thrall' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'thrall' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### STOLEN HEARTS EXPANDED
		scrollbox = {
			name = "stolen_hearts_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'stolen_hearts' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "stolen_hearts"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'heart_of_darkness_heartless' ) )]"
					}
	
					blockoverride "header_text"
					{
						raw_text = stolen_hearts_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'stolen_hearts' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'stolen_hearts' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### BOUND WRAITHS EXPANDED
		scrollbox = {
			name = "wraiths_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'bound_wraiths' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "bound_wraiths"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'bound_wraith' ) )]"
					}
	
					blockoverride "header_text"
					{
						raw_text = bound_wraiths_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'bound_wraiths' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'bound_wraiths' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### BOUND DEMONS EXPANDED
		scrollbox = {
			name = "demons_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'bound_demons' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "bound_demons"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'bound_demon' ) )]"
					}
	
					blockoverride "header_text"
					{
						raw_text = bound_demons_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'bound_demons' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'bound_demons' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### KNOWN TRUE NAMES EXPANDED
		scrollbox = {
			name = "known_true_names_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'known_true_names' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "known_true_names"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'known_true_name' ) )]"
					}
	
					blockoverride "header_text"
					{
						raw_text = known_true_names_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'known_true_names' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'known_true_names' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### EFFIGIES
		scrollbox = {
			name = "effigies_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'effigies' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "effigies"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'effigy_character' ) )]"
					}
	
					blockoverride "header_text"
					{
						raw_text = effigies_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'effigies' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'effigies' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### ANIMANTIS
		scrollbox = {
			name = "animantis_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'animantis' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "animantis"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'animantis_character' ) )]"
					}
	
					blockoverride "header_text"
					{
						raw_text = animantis_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'animantis' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'animantis' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		### MANIFESTATION
		scrollbox = {
			name = "manifestation_expanded"
			visible = "[CharacterWindow.IsRelationExpanded( 'manifestation' )]"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "manifestation"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'manifestation_character' ) )]"
					}
	
					blockoverride "header_text"
					{
						raw_text = manifestation_row_header
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'manifestation' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'manifestation' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		expand = {}
	}
	type POD_window_character_cultists_tab = widget {
		name = "cultists"
		visible = "[And(CharacterWindow.IsTabShown('relations'), GetVariableSystem.HasValue( 'character_tab_pod', 'cultists' ))]"
		size = { 100% 100% }
	
		using = Animation_Tab_Switch
	
		### CULTISTS EXPANDED
		scrollbox = {
			name = "cultists_expanded"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "cultists"
					margin_top = 10
					spacing = 5
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'worshipping_cultist' ) )]"
					}
	
					blockoverride "header_text"
					{
						text = cultists_row_header_expanded
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'worshipping_cultist' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'worshipping_cultist' )]"
					}

					blockoverride "gridbox_slots" {}
					
					hbox = {
						layoutpolicy_horizontal = growing
						margin = { 25 5 }
						margin_bottom = 8
						spacing = 5
						
						visible = "[ObjectsEqual( CharacterWindow.GetCharacter, GetPlayer )]"
						
						expand = {}

						hbox = {
							margin = { 10 0 }
							spacing = 3

							text_single = {
								text = "MASS_PRISONER_ACTIONS"
								default_format = "#low"
								align = nobaseline
							}

							spacer = {
								size = { 5 5 }
							}

							button_round = {
								datacontext = "[GetScriptedGui( 'mass_command_thrall_release_gui' )]"
								visible = "[ScriptedGui.IsShown(GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End)]"
								enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End)]"

								button_prison_release = {
									parentanchor = center
									using = tooltip_se
									onclick = "[ScriptedGui.Execute(GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End)]"
									tooltip = "[ScriptedGui.BuildTooltip(GuiScope.SetRoot( CharacterWindow.GetCharacter.MakeScope ).End)]"
								}
							}
						}
					}
				}
			}
		}
		expand = {}
	}
	type POD_window_character_neterus_tab = widget {
		name = "neterus"
		visible = "[And(CharacterWindow.IsTabShown('relations'), GetVariableSystem.HasValue( 'character_tab_pod', 'neterus' ))]"
		size = { 100% 100% }
	
		using = Animation_Tab_Switch
	
		### neteru EXPANDED
		scrollbox = {
			name = "neteru_expanded"
			size = { 100% 100% }
	
			blockoverride "scrollbox_replace_vbox" {
				vbox_character_row_item = {
					name = "neteru"
					margin_top = 10
					spacing = 5
	
	
					blockoverride "portrait_datamodel" {
						datamodel = "[CharacterWindow.GetRelationsOfType( GetRelation( 'worshipping_neteru' ) )]"
					}
	
					blockoverride "header_text"
					{
						text = neterus_row_header_expanded
					}
	
					blockoverride "expand_button_inside" {
						onclick = "[CharacterWindow.ToggleExpandedRelation( 'worshipping_neteru' )]"
						down = "[CharacterWindow.IsRelationExpanded( 'worshipping_neteru' )]"
					}
	

					blockoverride "gridbox_slots" {}
				}
			}
		}
		
		expand = {}
	}
	type vbox_coterie_row_item = vbox {
		layoutpolicy_vertical = expanding
		spacing = -3

		widget = {
			layoutpolicy_horizontal = expanding
			size = { 0 25 }
			min_width = 110

			block "expand_button" {
				button_standard_hover = {
					size = { 100% 100% }

					block "expand_button_inside" {}
				}
			}

			hbox = {
				margin = { 10 0 }

				background = {
					using = Text_Label_Background
					alpha = 0.5
					margin = { 0 -2 }
				}

				text_single = {
					align = nobaseline
					fontsize = 14
					text = coterie_row_header
				}

				expand = {}

				text_single = {
					align = nobaseline
					default_format = "#weak"

					block "remaining_items" {
						visible = no
					}
				}
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			using = Animation_Character_Window_Refresh

			vbox = {
				margin_top = 8

				coa_house_medium = {
					datacontext = "[CharacterWindow.GetCharacter.MakeScope.Var('coterie').Var('coa_dummy').Char.GetHouse]"
					blockoverride "coa_button" {}
				}
			}

			block "gridbox" {
				fixedgridbox = {
					flipdirection = yes
					addcolumn = 85
					addrow = 90
					datamodel_wrap = 7
					maxverticalslots = 1

					datamodel = "[CharacterWindow.GetCharacter.MakeScope.Var('coterie').GetList('members')]"

					item = {
						portrait_head_small = {
							datacontext = "[Scope.Char]"
							blockoverride "portrait_button" {
								using = tooltip_ne
							}
							blockoverride "glow_visible" {
								visible = no
							}
						}
					}
				}
			}

			expand = {}
		}

		expand = {}
	}
	
	type POD_window_character_knight_window = window {
		visible = "[And(GetVariableSystem.Exists('pod_knight_window_open'), Character.HasLandedTitles)]"
		using = Window_Background_Subwindow
		parentanchor = left|vcenter

		state = {
			name = _show
			# TODO: parent anchor is not considering the character windows full size for some reason
			# Janky workaround until a solution is found
			position = { 600 0 }
		}

		state = {
			name = populate_and_sort_knights
			next = populate_and_sort_knights
			trigger_on_create = yes
			# Call a no-op because we have no good way to offload this check to the SGUI itself
			on_finish = "[GetScriptedGui(Select_CString(Character.HasLandedTitles, 'populate_and_sort_knights', 'noop_gui')).Execute(GuiScope.SetRoot(Character.MakeScope).End)]"
		}

		vbox = {
			set_parent_size_to_minimum = yes
			layoutpolicy_vertical = expanding

			margin_widget = {
				margin = { 5 5 }
				size = { 400 40 }
				
				text_single = {
					parentanchor = center
					max_width = 325
					layoutpolicy_horizontal = expanding
					align = center
					elide = right
					using = Font_Type_Flavor
					fontsize = 18
					fontsize_min = 17
					raw_text = "[Character.GetFirstNamePossessive] [Localize('knight_default_no_tooltip_plural')]"
				}
				
				button_close = {
					parentanchor = top|right
					shortcut = "close_window"
					tooltip = "CLOSE_TOOLTIP"
					clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_close"
					onclick = "[GetVariableSystem.Toggle('pod_knight_window_open')]"
				}
			}

			scrollbox = {
				size = { 400 600 }
				# disabled to apply margins to the flowcontainer instead
				# looks more consistent between scrollbar/no scrollbar views
				blockoverride "scrollbox_margins"
				{
				}
				blockoverride "scrollbox_content"
				{
					flowcontainer = {
						datamodel = "[Character.MakeScope.GetList('sorted_knights')]"
						direction = vertical
						ignoreinvisible = yes
						layoutpolicy_horizontal = expanding
						margin = { 0 7 }
						item = {
							widget = {
								# attempted sanity check here to try and avoid rendering culled characters
								# they will disappear almost instantaneously once the list is regenerated
								visible = "[Scope.Char.IsValid]"
								size = { 400 85 }
								hbox = {
									margin = { 7 0 }
									layoutpolicy_horizontal = expanding
									spacing = 2

									portrait_head_small = {
										datacontext = "[Scope.Char]"
									}

									vbox = {
										layoutpolicy_vertical = expanding
										layoutpolicy_horizontal = expanding
										spacing = 5
										
										container = {
											layoutpolicy_horizontal = expanding
											text_single = {
												size = { 100% 100% }
												layoutpolicy_horizontal = expanding
												raw_text = "[Scope.Char.GetFirstNameNoTooltip]"
											
											}
										}

										overlappingitembox = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding
											datamodel = "[Scope.Char.GetTraitIndices]"

											item = {
												icon_trait = {
													datacontext = "[GetTraitForIndex(int32.GetInt)]"
													visible = "[GetScriptedGui('commander_trait').IsShown(GuiScope.SetRoot(Trait.MakeScope).End)]"

													blockoverride "icon_size"
													{
														size = { 40 40 }
													}
												}
											}
										}
									}

									expand = {}

									vbox = {
										tooltip = "[Scope.Char.GetCommanderAdvantageDesc]"
										using = tooltip_ne
										spacing = -3

										icon = {
											name = "skill_icon"
											texture = "gfx/interface/icons/icon_commander_advantage.dds"
											size = { 32 32 }
										}

										text_single = {
											text = "[Scope.Char.GetCommanderAdvantage]"
											align = nobaseline
										}
									}

									vbox = {
										tooltip = "[Scope.Char.GetProwessBreakdown]"
										using = tooltip_ne
										spacing = -3
			
										icon = {
											size = { 32 32 }
											texture = "gfx/interface/icons/icon_prowess.dds"
										}
			
										text_single = {
											text = "[Scope.Char.GetProwess|0]"
											align = nobaseline
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	type POD_character_window_sidebar_lore_button = button_standard_clean {
		size = { @sidebar_button_width 50 }
		alpha = 0.95
		
		background = {
			framesize = { 1144 486 }
			texture = "gfx/interface/window_legend_chronicle/marginalia_illustration_mena.dds"
			
			fittype = centercrop
			margin = { 4 -2 }
			alpha = 0.5
			color = { 1.0 1.0 0.6 1.0 }

			modify_texture = {
				texture = "gfx/interface/component_masks/mask_siege_fire.dds"
				blend_mode = alphamultiply
				alpha = 1
				mirror = vertical
			}
		}
		
		# background = {
		# 	texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_thick.dds"
		# 	shaderfile = "gfx/FX/POD_shaders/POD_event_shaders.shader"
		# 	effectname = "FogSuspicion2"
		# 	margin = { 0 -2 }
		# }
		
		hbox = {
			layoutpolicy_horizontal = expanding
			
			expand = {}
			
			highlight_icon = {
				alpha = 0.85
				block "lore_texture" { texture = "gfx/interface/buttons/podlore_gui_button.dds" }
				size = { 35 35 }
			}

			spacer = { size = { 14 0 } }
			
			vbox = {
				text_single = {
					alpha = 0.85
					text = "gui_lore"
					default_format = "#color:{0.74,0.66,0.52};glow_color:{0.68,0.56,0.41,0.3}"
					fontsize = 18
				}
				spacer = { size = { 0 3 } }
			}
			
			spacer = { size = { 8 0 } }
			
			expand = {}
		}
	}
	
	type POD_character_window_sidebar = window {
		visible = "[GetPlayer.IsValid]"
		
		movable = no
		layer = middle
		parentanchor = top|right
		position = { 228 -1 }

		state = {
			name = _show
			using = Animation_FadeIn_Quick
			position_x = 228
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Quick
			position_x = 168 # default position -60
		}
		
		# marginalia
		widget = {
			parentanchor = bottom|left
			
			size = { 80 260 }
			position = { 4 150 }
			
			scale = 0.7
		
			background = {
				texture = "gfx/interface/component_tiles/tile_window_background_no_edge.dds"
				spriteType = Corneredtiled
				color = { 0.65 0.65 0.65 1.0 }

				modify_texture = {
				 	texture = "gfx/interface/window_legend_chronicle/legend_button_frame.dds"
					blend_mode = alphamultiply
			 	 	mirror = horizontal|vertical
				}
			}
		}
		
		vbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			set_parent_size_to_minimum = yes
		
			background = {
				texture = "gfx/interface/component_tiles/tile_window_background_subwindow.dds"
				spriteType = Corneredtiled
				spriteborder = { 18 18 }
				texture_density = 2

				modify_texture = {
					name = "overlay"
					texture = "gfx/interface/component_overlay/overlay_effect.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = overlay
					alpha = 1
				}
			}
		
			background = {
				fittype = centercrop
				framesize = { 1144 486 }
				texture = "gfx/interface/window_legend_chronicle/marginalia_illustration.dds"
				color = { 0.2 0.2 0.2 1.0 }
				mirror = vertical
				
				margin = { -12 -12 }

				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_horizontal_middle_inverse.dds"
					blend_mode = alphamultiply
					alpha = 0.4
				}
			}
			
			spacer = { size = { 240 22 } }
			
			
			####################################
			##########   SPLAT INFO   ##########
			####################################
			
			#spacer = { size = { 0 12 } }
			
			hbox = {
				alpha = 0.85
			
				spacer = { size = { 20 0 } }
				
				vbox = {
					datamodel = "[Character.GetTraitIndices]"
					
					item = {
						icon_trait = {
							datacontext = "[GetTraitForIndex(int32.GetInt)]"
							visible = "[GetScriptedGui('sidebar_splat_trait').IsShown(GuiScope.SetRoot(Trait.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
						}
					}
				}
				
				spacer = { size = { 6 0 } }
				
				vbox = {
					layoutpolicy_horizontal = expanding
					
					vbox = {
						datamodel = "[Character.GetTraitIndices]"
						
						item = {
							text_single = {
								datacontext = "[GetTraitForIndex(int32.GetInt)]"
								visible = "[GetScriptedGui('sidebar_splat_trait').IsShown(GuiScope.SetRoot(Trait.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
								text = "[Trait.GetNameNoTooltip(Character.Self)]"
								default_format = "#color:{0.74,0.66,0.52};glow_color:{0.68,0.56,0.41,0.3}"
								#default_format = "#color:{0.74,0.66,0.52};glow_color:{0.0,0.0,0.0,0.8}"
								fontsize = 18
							}
						}
					}
					
					# Vampire Clan
					text_single = {
						text = "[GetScriptedGui('POD_sidebar_show_vampclan').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
						visible = "[Character.HasTraitByKey('vampire')]"
						default_format = @invisible_color
					}
					
					# Vampire Generation
					# text_single = {
					# 	text = "[GetScriptedGui('POD_sidebar_show_vampgeneration').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
					# 	visible = "[Character.HasTraitByKey('vampire')]"
					# 	default_format = @invisible_color
					# }
					
					# Blood Potency
					# text_single = {
					# 	text = "[Character.Custom('PODBloodPotency')]"
					# 	visible = "[GetScriptedGui('POD_has_bloodpotency').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
					# 	#default_format = @invisible_color
					# }
					
					# Dharma (trait)
					text_single = {
						text = "[GetScriptedGui('POD_sidebar_show_dharma').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
						visible = "[GetScriptedGui('POD_sidebar_show_dharma').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
						default_format = @invisible_color
					}
					
					# Dharma (xp needed for levelup)
					text_single = {
						#text = "[GetScriptedGui('POD_sidebar_show_dharma_insight').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
						text = "POD_sidebar_dharma_insight"
						visible = "[GetScriptedGui('POD_sidebar_show_dharma_insight').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
						default_format = @invisible_color
					}
					
					# Fera Rank
					text_single = {
						#text = "[GetScriptedGui('POD_sidebar_show_fera_rank').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
						text = "POD_sidebar_fera_rank"
						visible = "[GetScriptedGui('POD_sidebar_show_fera_rank').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
						default_format = @invisible_color
					}
					
					# Demon cultists
					text_single = {
						#text = "[GetScriptedGui('POD_sidebar_show_cultists').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
						text = "POD_sidebar_cultists"
						visible = "[Character.HasTraitByKey('demon')]"
						default_format = @invisible_color
					}
					
					# Mummy memories
					text_single = {
						text = "POD_sidebar_mummy_memories"
						visible = "[Character.HasTraitByKey('mummy')]"
						default_format = @invisible_color
					}
					
					# Mummy integrity
					text_single = {
						text = "POD_sidebar_mummy_integrity"
						visible = "[Character.HasTraitByKey('integrity')]"
						default_format = @invisible_color
					}
					
					# Fae Kith
					text_single = {
						text = "[GetScriptedGui('POD_sidebar_show_fae_kith').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
						visible = "[GetScriptedGui('POD_sidebar_show_fae_kith').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
						default_format = @invisible_color
					}
					
					# Spirit Rank
					text_single = {
						text = "POD_sidebar_spirit_rank"
						visible = "[GetScriptedGui('POD_sidebar_show_spirit_rank').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
						default_format = @invisible_color
					}
					
					# Spirit Pact Modifier
					text_single = {
						text = "[GetScriptedGui('POD_sidebar_show_spirit_pact').BuildTooltip(GuiScope.SetRoot(Character.MakeScope).End)]"
						visible = "[GetScriptedGui('POD_sidebar_show_spirit_pact').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
						default_format = @invisible_color
					}
					
					spacer = { size = { 0 1 } }
				}
			
				spacer = { size = { 20 0 } }
			}
			
			
			######################################
			##########   LORE BUTTONS   ##########
			######################################
			
			spacer = { size = { 0 14 } }
			
			# PoD lore
			POD_character_window_sidebar_lore_button = {
				visible = "[Not( EqualTo_string( Concatenate('POD_persistentpodlore.desc.',Character.GetHistoryId), Localize(Concatenate('POD_persistentpodlore.desc.',Character.GetHistoryId))))]"
				onclick = "[GetScriptedGui( 'trigger_persistentpodlore_gui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'target', Character.MakeScope ).End ) ]"
				tooltip = "gui_lore_pod_tt"
				
				blockoverride "lore_texture" {
					texture = "gfx/interface/buttons/podlore_gui_button.dds"
				}
			}
		
			# WoD lore
			POD_character_window_sidebar_lore_button = {
				visible = "[Not( EqualTo_string( Concatenate('POD_investigate.desc.',Character.GetHistoryId), Localize(Concatenate('POD_investigate.desc.',Character.GetHistoryId))))]"
				onclick = "[GetScriptedGui( 'trigger_lore_gui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'target', Character.MakeScope ).End ) ]"
				tooltip = "gui_lore_tt"
				
				blockoverride "lore_texture" {
					texture = "gfx/interface/buttons/lore_gui_button.dds"
				}
			}
			
			# WoD lore for spawned adventurers (Dracula etc)
			POD_character_window_sidebar_lore_button = {
				visible = "[GetScriptedGui('character_has_spawnlore_gui').IsShown( GuiScope.SetRoot( Character.MakeScope ).End )]"
				onclick = "[GetScriptedGui( 'trigger_spawnlore_gui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'target', Character.MakeScope ).End ) ]"
				tooltip = "gui_lore_tt"
				
				blockoverride "lore_texture" {
					texture = "gfx/interface/buttons/lore_gui_button.dds"
				}
			}	
			
			# Patron lore
			POD_character_window_sidebar_lore_button = {
				visible = "[GetScriptedGui('character_has_patronlore_gui').IsShown( GuiScope.SetRoot( Character.MakeScope ).End )]"
				onclick = "[GetScriptedGui( 'trigger_patronlore_gui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'target', Character.MakeScope ).End ) ]"
				tooltip = "gui_lore_patron_tt"
				
				blockoverride "lore_texture" {
					texture = "gfx/interface/buttons/patronlore_gui_button.dds"
				}
			}
			
			# Folklore
			POD_character_window_sidebar_lore_button = {
				visible = "[GetScriptedGui('character_has_podlore_gui').IsShown( GuiScope.SetRoot( Character.MakeScope ).End )]"
				onclick = "[GetScriptedGui( 'trigger_podlore_gui' ).Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope( 'target', Character.MakeScope ).End ) ]"
				tooltip = "gui_lore_folklore_tt"
				
				blockoverride "lore_texture" {
					texture = "gfx/interface/buttons/podlore_gui_button.dds"
				}
			}
			
			
			######################################
			##########   HEALTH TRACK   ##########
			######################################
			
			vbox = {
				alpha = 0.85
				visible = "[Character.IsAlive]"
			
				spacer = { size = { 0 6 } }
				
				text_single = {
					raw_text = "[POD_health_track|E]:"
				}
				text_single = {
					visible = "[Not(GetScriptedGui('POD_show_character_skills').IsShown(GuiScope.SetRoot(Character.MakeScope).End))]"
					text = "POD_health_track_unknown"
					default_format = "#italic"
				}
				text_single = {
					visible = "[GetScriptedGui('POD_show_character_skills').IsShown(GuiScope.SetRoot(Character.MakeScope).End)]"
					text = "POD_character_health_track_line1"
					fontsize_min = 11 # idk what this does but the error log complains if this isn't there
					fontsize = 12
				}
				text_single = {
					visible = "[And( GreaterThan_CFixedPoint(Character.MakeScope.ScriptValue('POD_health_track_length'),'(CFixedPoint)10'), GetScriptedGui('POD_show_character_skills').IsShown(GuiScope.SetRoot(Character.MakeScope).End) )]"
					text = "POD_character_health_track_line2"
					fontsize_min = 11 # idk what this does but the error log complains if this isn't there
					fontsize = 12
				}
			}
			
			
			######################################
			##########   Interactions   ##########
			######################################
			
			### Choose Sire
			vbox = {
				alpha = 0.85
				visible = "[GetScriptedGui('POD_sidebar_choose_sire').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
				
				spacer = { size = { 0 20 } }
				
				button_primary = {
					onclick = "[GetScriptedGui('POD_sidebar_choose_sire').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
					tooltip = "[GetScriptedGui('POD_sidebar_choose_sire').BuildTooltip(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
					size = { @sidebar_button_width 33 }
					
					# bandaid solution to prevent you from opening multiple event windows
					enabled = "[Not(IsPausedByEvent)]"
					
					text = "POD_sidebar_choose_sire"
				}
			}
			
			### Curia Support
			vbox = {
				alpha = 0.85
				datacontext = "[GetDecisionWithKey('POD_curia_support_decision')]"
				visible = "[And( Decision.IsShownForPlayer, ObjectsEqual( Character.Self, GetPlayer.Self ) )]"
				
				spacer = { size = { 0 20 } }
				
				button_standard = {
					onclick = "[OpenGameViewData( 'decision_detail', Decision.Self )]"
					tooltip = "[Decision.GetShortDescForPlayer]"
					size = { @sidebar_button_width 33 }
					
					text = "POD_sidebar_curia_support"
				}
			}
			
			
			############################################
			##########   MAGIC INTERACTIONS   ##########
			############################################
			
			vbox = {
				alpha = 0.85
				visible = "[Or3( Character.IsPlayerInteractionShown('blood_sorcery_interaction'), Character.IsPlayerInteractionShown('POD_necromancy_gui_interaction'), Character.IsPlayerInteractionShown('POD_numina_sorcery_open_gui_interaction') )]"
			
				spacer = { size = { 0 12 } }
				
				text_single = {
					text = "POD_sidebar_use_magic"
				}
				spacer = { size = { 0 6 } }
				
				hbox = {
					spacing = 4
					button_normal = {
						size = { 45 45 }
						visible = "[Character.IsPlayerInteractionShown('blood_sorcery_interaction')]"
						tooltip = "[Character.GetPlayerInteractionTooltip('blood_sorcery_interaction')]"
						onclick = "[GetScriptedGui('open_bloodmagic').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
							
						highlight_icon = {
							size = { 100% 100% }
							texture = "gfx/interface/icons/lifestyles/blood_magic_lifestyle.dds"
							framesize = { 160 160 }
						}
					}
					button_normal = {
						alpha = 0.85
						size = { 45 45 }
						visible = "[Character.IsPlayerInteractionShown('POD_necromancy_gui_interaction')]"
						tooltip = "[Character.GetPlayerInteractionTooltip('POD_necromancy_gui_interaction')]"
						onclick = "[GetScriptedGui('open_necromagic').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
							
						highlight_icon = {
							size = { 100% 100% }
							texture = "gfx/interface/icons/lifestyles/necro_magic_lifestyle.dds"
							framesize = { 160 160 }
						}
					}
					button_normal = {
						alpha = 0.85
						size = { 45 45 }
						visible = "[Character.IsPlayerInteractionShown('POD_numina_sorcery_open_gui_interaction')]"
						tooltip = "[Character.GetPlayerInteractionTooltip('POD_numina_sorcery_open_gui_interaction')]"
						onclick = "[GetScriptedGui('open_sorcery').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('recipient',Character.MakeScope).End)]"
							
						highlight_icon = {
							size = { 100% 100% }
							texture = "gfx/interface/icons/lifestyles/sorcery_lifestyle.dds"
							framesize = { 160 160 }
						}
					}
				}
			}
			
			spacer = { size = { 240 36 } }
		}
	}
}
