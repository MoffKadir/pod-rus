l_english:
# Energy types
 POD_energy_angst: "@wraith_icon!Angst" # TODO: different icon?
 POD_energy_pathos: "@wraith_icon!Pathos"
 POD_energy_blood: "$pod_hunger_i$Blood"
 POD_energy_resolve: "@demon_icon!Resolve"
 POD_energy_gnosis: "@gnosis_icon!Gnosis"
 POD_energy_glamour: "@changeling_icon!Glamour"
 POD_energy_dread: "[Concept('dread','@dread_icon!Dread')|E]"
 #POD_energy: "[Concept('static_stress','@stress_loss_icon!Willpower')|E]"
 POD_energy: "#TOOLTIP:game_concept_static_stress_desc #E @stress_loss_icon!Willpower#!#!"

 POD_energy_angst_icon: "@wraith_icon!" # TODO: different icon?
 POD_energy_pathos_icon: "@wraith_icon!"
 POD_energy_blood_icon: "$pod_hunger_i$"
 POD_energy_resolve_icon: "@demon_icon!"
 POD_energy_gnosis_icon: "@gnosis_icon!"
 POD_energy_glamour_icon: "@changeling_icon!"
 POD_energy_dread_icon: "[Concept('dread','@dread_icon!')]"
 # using the stress gain icon instead of stress loss since it makes more sense for energy costs
 #POD_energy_icon: "[Concept('static_stress','@stress_gain_icon!')]"
 POD_energy_icon: "#TOOLTIP:game_concept_static_stress_desc #E @stress_gain_icon!#!#!"

 POD_splat_energy_cost: "$VALUE|0$ [CHARACTER.Custom('PODEnergySplatIcon')]"

# Energy vessel maintenance
 POD_extract_energy_desc: "#bold [Multiply_CFixedPoint( SCOPE.GetValue('spent_energy_amount'), this_character.MakeScope.ScriptValue('splat_energy_multiplier') )|V0]#! stored [this_character.Custom('PODEnergySplat')] from the [this_artifact.Custom('ColorizedArtifactName')] will be used"
 POD_store_energy_desc: "#bold [Multiply_CFixedPoint( SCOPE.GetValue('stored_energy_amount'), this_character.MakeScope.ScriptValue('splat_energy_multiplier') )|V0]#! [this_character.Custom('PODEnergySplat')] will be stored in the [this_artifact.Custom('ColorizedArtifactName')]"
 POD_energy_vessel_add_max_effect: "Add Maximum Possible [GetPlayer.Custom('PODEnergySplat')] Stored: [Multiply_CFixedPoint( '(CFixedPoint)$VALUE|q$', GetPlayer.MakeScope.ScriptValue('splat_energy_multiplier') )|V0]"

# custom_description loc
# note that colors are reversed for hunger (increase is bad, decrease is good)
 POD_hunger_change_desc: "$pod_hunger_with_icon$ will #N increase#! by #bold $VALUE|0V$#!"
 POD_hunger_change_desc_past: "$pod_hunger_with_icon$ has #N increased#! by #bold $VALUE|0V$#!"
 POD_hunger_change_desc_neg: "$pod_hunger_with_icon$ will #P decrease#! by #bold $VALUE|0V$#!"
 POD_hunger_change_desc_past_neg: "$pod_hunger_with_icon$ has #P decreased#! by #bold $VALUE|0V$#!"

 POD_angst_change_desc: "$POD_energy_angst$ will #P increase#! by #bold $VALUE|0V$#!"
 POD_angst_change_desc_past: "$POD_energy_angst$ has #P increased#! by #bold $VALUE|0V$#!"
 POD_angst_change_desc_neg: "$POD_energy_angst$ will #N decrease#! by #bold $VALUE|0V$#!"
 POD_angst_change_desc_past_neg: "$POD_energy_angst$ has #N decreased#! by #bold $VALUE|0V$#!"

 POD_pathos_change_desc: "$POD_energy_pathos$ will #P increase#! by #bold $VALUE|0V$#!"
 POD_pathos_change_desc_past: "$POD_energy_pathos$ has #P increased#! by #bold $VALUE|0V$#!"
 POD_pathos_change_desc_neg: "$POD_energy_pathos$ will #N decrease#! by #bold $VALUE|0V$#!"
 POD_pathos_change_desc_past_neg: "$POD_energy_pathos$ has #N decreased#! by #bold $VALUE|0V$#!"

 POD_resolve_change_desc: "$POD_energy_resolve$ will #P increase#! by #bold $VALUE|0V$#!"
 POD_resolve_change_desc_past: "$POD_energy_resolve$ has #P increased#! by #bold $VALUE|0V$#!"
 POD_resolve_change_desc_neg: "$POD_energy_resolve$ will #N decrease#! by #bold $VALUE|0V$#!"
 POD_resolve_change_desc_past_neg: "$POD_energy_resolve$ has #N decreased#! by #bold $VALUE|0V$#!"

 POD_gnosis_change_desc: "$POD_energy_gnosis$ will #P increase#! by #bold $VALUE|0V$#!"
 POD_gnosis_change_desc_past: "$POD_energy_gnosis$ has #P increased#! by #bold $VALUE|0V$#!"
 POD_gnosis_change_desc_neg: "$POD_energy_gnosis$ will #N decrease#! by #bold $VALUE|0V$#!"
 POD_gnosis_change_desc_past_neg: "$POD_energy_gnosis$ has #N decreased#! by #bold $VALUE|0V$#!"

 POD_glamour_change_desc: "$POD_energy_glamour$ will #P increase#! by #bold $VALUE|0V$#!"
 POD_glamour_change_desc_past: "$POD_energy_glamour$ has #P increased#! by #bold $VALUE|0V$#!"
 POD_glamour_change_desc_neg: "$POD_energy_glamour$ will #N decrease#! by #bold $VALUE|0V$#!"
 POD_glamour_change_desc_past_neg: "$POD_energy_glamour$ has #N decreased#! by #bold $VALUE|0V$#!"

# misc
 hunger_increase_effect.hungerless: "Because of your limitless blood supply, your $pod_hunger_with_icon$ won't change."
 hunger_decrease_effect.tt.full: "Since you are already full, $pod_hunger_with_icon$ will not decrease."
 hunger_decrease_effect.tt.nourishment: "@warning_icon!#N Since you have [GetPlayer.Custom('PODBloodPotency')], taking such a small amount of blood isn't enough to sate your $pod_hunger_with_icon$.#!"
 hunger_decrease_effect.tt.0: "@warning_icon!#N Since you have [GetPlayer.Custom('PODBloodPotency')], your $pod_hunger_with_icon$ will #bold not#! decrease further unless you drain this mortal to death.#!"
